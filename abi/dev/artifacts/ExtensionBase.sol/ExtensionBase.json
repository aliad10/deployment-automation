{"abi":[{"type":"constructor","inputs":[{"name":"_fundDeployer","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"activateForFund","inputs":[{"name":"","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"deactivateForFund","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"getFundDeployer","inputs":[],"outputs":[{"name":"fundDeployer_","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"getOwner","inputs":[],"outputs":[{"name":"owner_","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"getVaultProxyForFund","inputs":[{"name":"_comptrollerProxy","type":"address","internalType":"address"}],"outputs":[{"name":"vaultProxy_","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"receiveCallFromComptroller","inputs":[{"name":"","type":"address","internalType":"address"},{"name":"","type":"uint256","internalType":"uint256"},{"name":"","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setConfigForFund","inputs":[{"name":"","type":"address","internalType":"address"},{"name":"","type":"address","internalType":"address"},{"name":"","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"event","name":"ValidatedVaultProxySetForFund","inputs":[{"name":"comptrollerProxy","type":"address","indexed":true,"internalType":"address"},{"name":"vaultProxy","type":"address","indexed":true,"internalType":"address"}],"anonymous":false}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"activateForFund(bool)":"80d57063","deactivateForFund()":"bd8e959a","getFundDeployer()":"97c0ac87","getOwner()":"893d20e8","getVaultProxyForFund(address)":"46790346","receiveCallFromComptroller(address,uint256,bytes)":"1bee801e","setConfigForFund(address,address,bytes)":"f067cc11"},"rawMetadata":"{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_fundDeployer\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"comptrollerProxy\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"vaultProxy\",\"type\":\"address\"}],\"name\":\"ValidatedVaultProxySetForFund\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"name\":\"activateForFund\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deactivateForFund\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFundDeployer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"fundDeployer_\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner_\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_comptrollerProxy\",\"type\":\"address\"}],\"name\":\"getVaultProxyForFund\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"vaultProxy_\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"receiveCallFromComptroller\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"setConfigForFund\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Enzyme Foundation <security@enzyme.finance>\",\"kind\":\"dev\",\"methods\":{\"activateForFund(bool)\":{\"details\":\"Unimplemented by default, may be overridden.\"},\"deactivateForFund()\":{\"details\":\"Unimplemented by default, may be overridden.\"},\"getFundDeployer()\":{\"returns\":{\"fundDeployer_\":\"The `FUND_DEPLOYER` variable value\"}},\"getOwner()\":{\"details\":\"Ownership is deferred to the owner of the FundDeployer contract\",\"returns\":{\"owner_\":\"The owner\"}},\"getVaultProxyForFund(address)\":{\"params\":{\"_comptrollerProxy\":\"The ComptrollerProxy of the fund\"},\"returns\":{\"vaultProxy_\":\"The VaultProxy of the fund\"}},\"receiveCallFromComptroller(address,uint256,bytes)\":{\"details\":\"Unimplemented by default, may be overridden.\"},\"setConfigForFund(address,address,bytes)\":{\"details\":\"Unimplemented by default, may be overridden.\"}},\"title\":\"ExtensionBase Contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"activateForFund(bool)\":{\"notice\":\"Allows extension to run logic during fund activation\"},\"deactivateForFund()\":{\"notice\":\"Allows extension to run logic during fund deactivation (destruct)\"},\"getFundDeployer()\":{\"notice\":\"Gets the `FUND_DEPLOYER` variable\"},\"getOwner()\":{\"notice\":\"Gets the owner of this contract\"},\"getVaultProxyForFund(address)\":{\"notice\":\"Gets the verified VaultProxy for a given ComptrollerProxy\"},\"receiveCallFromComptroller(address,uint256,bytes)\":{\"notice\":\"Receives calls from ComptrollerLib.callOnExtension() and dispatches the appropriate action\"},\"setConfigForFund(address,address,bytes)\":{\"notice\":\"Allows extension to run logic during fund configuration\"}},\"notice\":\"Base class for an extension\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/release/extensions/utils/ExtensionBase.sol\":\"ExtensionBase\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":false},\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-solc-0.6/contracts/\",\":@uniswap/v3-core/=lib/uniswap-v3-core/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":morpho-blue/=lib/morpho-blue/src/libraries/\",\":openzeppelin-solc-0.6/=lib/openzeppelin-solc-0.6/contracts/\",\":openzeppelin-solc-0.7/=lib/openzeppelin-solc-0.7/contracts/\",\":openzeppelin-solc-0.8/=lib/openzeppelin-solc-0.8/contracts/\",\":uniswap-v3-core-0.8/=lib/uniswap-v3-core-0.8/\",\":uniswap-v3-core/=lib/uniswap-v3-core/\",\":uniswap-v3-periphery/=lib/uniswap-v3-periphery/contracts/\"]},\"sources\":{\"contracts/release/core/fund-deployer/IFundDeployer.sol\":{\"keccak256\":\"0xe6b48554252ebc683973adb7218972754980d12a3ea6bc376708f42fffc0bd61\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://2b546dca52114101fee86caf60e54af2333d907fb315ff4b3106486d9ce886be\",\"dweb:/ipfs/QmUKMRJXhUVTeYz8ef8yCMWLDLJ4ttU7w2Zee8fok35HvG\"]},\"contracts/release/extensions/IExtension.sol\":{\"keccak256\":\"0x51304e9fc35facb8d44bf7b5331557efaed9046311dc6cca2fc7d61a293381fe\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://8c95c1eb1dfcc93caab4d8ee69bd197c4f5d4fa9acecf4418b521c60074873f3\",\"dweb:/ipfs/QmV5XkXhZCvShfkA1eQtLCDMkHw9TwAJp1WEatFbtpNpQZ\"]},\"contracts/release/extensions/utils/ExtensionBase.sol\":{\"keccak256\":\"0x0e20a976aa84bacb1c19c9804a96de231f6ed5fa954b014679dfb64d1a7b4878\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://a9a048f2cfa07627c28a3bfa73a36d191aa4384ee0b13fbd7c908971e7da7cd3\",\"dweb:/ipfs/Qma1KKhaj9twkMbtkDgo7Rq6BnowsJKDqw2kwwWFv59emx\"]},\"contracts/release/utils/0.6.12/FundDeployerOwnerMixin.sol\":{\"keccak256\":\"0x82806c6999b4b7d3f1aed68f2e1ae56fc7d7ece67308493a8fad9075f080c116\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://5dc2af5b517c6d2e3f7b57696a40067d494824fc098ee178f5870f63f611285b\",\"dweb:/ipfs/QmZUDHC4RQ2MRA2DRbFoPMpeCkeEeciUBFp7JTsWcPhQcR\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.6.12+commit.27d51765"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"_fundDeployer","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"comptrollerProxy","type":"address","indexed":true},{"internalType":"address","name":"vaultProxy","type":"address","indexed":true}],"type":"event","name":"ValidatedVaultProxySetForFund","anonymous":false},{"inputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"activateForFund"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"deactivateForFund"},{"inputs":[],"stateMutability":"view","type":"function","name":"getFundDeployer","outputs":[{"internalType":"address","name":"fundDeployer_","type":"address"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getOwner","outputs":[{"internalType":"address","name":"owner_","type":"address"}]},{"inputs":[{"internalType":"address","name":"_comptrollerProxy","type":"address"}],"stateMutability":"view","type":"function","name":"getVaultProxyForFund","outputs":[{"internalType":"address","name":"vaultProxy_","type":"address"}]},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"receiveCallFromComptroller"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"setConfigForFund"}],"devdoc":{"kind":"dev","methods":{"activateForFund(bool)":{"details":"Unimplemented by default, may be overridden."},"deactivateForFund()":{"details":"Unimplemented by default, may be overridden."},"getFundDeployer()":{"returns":{"fundDeployer_":"The `FUND_DEPLOYER` variable value"}},"getOwner()":{"details":"Ownership is deferred to the owner of the FundDeployer contract","returns":{"owner_":"The owner"}},"getVaultProxyForFund(address)":{"params":{"_comptrollerProxy":"The ComptrollerProxy of the fund"},"returns":{"vaultProxy_":"The VaultProxy of the fund"}},"receiveCallFromComptroller(address,uint256,bytes)":{"details":"Unimplemented by default, may be overridden."},"setConfigForFund(address,address,bytes)":{"details":"Unimplemented by default, may be overridden."}},"version":1},"userdoc":{"kind":"user","methods":{"activateForFund(bool)":{"notice":"Allows extension to run logic during fund activation"},"deactivateForFund()":{"notice":"Allows extension to run logic during fund deactivation (destruct)"},"getFundDeployer()":{"notice":"Gets the `FUND_DEPLOYER` variable"},"getOwner()":{"notice":"Gets the owner of this contract"},"getVaultProxyForFund(address)":{"notice":"Gets the verified VaultProxy for a given ComptrollerProxy"},"receiveCallFromComptroller(address,uint256,bytes)":{"notice":"Receives calls from ComptrollerLib.callOnExtension() and dispatches the appropriate action"},"setConfigForFund(address,address,bytes)":{"notice":"Allows extension to run logic during fund configuration"}},"version":1}},"settings":{"remappings":["@openzeppelin/contracts/=lib/openzeppelin-solc-0.6/contracts/","@uniswap/v3-core/=lib/uniswap-v3-core/","ds-test/=lib/forge-std/lib/ds-test/src/","forge-std/=lib/forge-std/src/","morpho-blue/=lib/morpho-blue/src/libraries/","openzeppelin-solc-0.6/=lib/openzeppelin-solc-0.6/contracts/","openzeppelin-solc-0.7/=lib/openzeppelin-solc-0.7/contracts/","openzeppelin-solc-0.8/=lib/openzeppelin-solc-0.8/contracts/","uniswap-v3-core-0.8/=lib/uniswap-v3-core-0.8/","uniswap-v3-core/=lib/uniswap-v3-core/","uniswap-v3-periphery/=lib/uniswap-v3-periphery/contracts/"],"optimizer":{"runs":200,"details":{"peephole":true,"jumpdestRemover":true,"orderLiterals":true,"deduplicate":true,"cse":true,"constantOptimizer":true,"yul":false}},"metadata":{"bytecodeHash":"none"},"compilationTarget":{"contracts/release/extensions/utils/ExtensionBase.sol":"ExtensionBase"},"evmVersion":"istanbul","libraries":{}},"sources":{"contracts/release/core/fund-deployer/IFundDeployer.sol":{"keccak256":"0xe6b48554252ebc683973adb7218972754980d12a3ea6bc376708f42fffc0bd61","urls":["bzz-raw://2b546dca52114101fee86caf60e54af2333d907fb315ff4b3106486d9ce886be","dweb:/ipfs/QmUKMRJXhUVTeYz8ef8yCMWLDLJ4ttU7w2Zee8fok35HvG"],"license":"GPL-3.0"},"contracts/release/extensions/IExtension.sol":{"keccak256":"0x51304e9fc35facb8d44bf7b5331557efaed9046311dc6cca2fc7d61a293381fe","urls":["bzz-raw://8c95c1eb1dfcc93caab4d8ee69bd197c4f5d4fa9acecf4418b521c60074873f3","dweb:/ipfs/QmV5XkXhZCvShfkA1eQtLCDMkHw9TwAJp1WEatFbtpNpQZ"],"license":"GPL-3.0"},"contracts/release/extensions/utils/ExtensionBase.sol":{"keccak256":"0x0e20a976aa84bacb1c19c9804a96de231f6ed5fa954b014679dfb64d1a7b4878","urls":["bzz-raw://a9a048f2cfa07627c28a3bfa73a36d191aa4384ee0b13fbd7c908971e7da7cd3","dweb:/ipfs/Qma1KKhaj9twkMbtkDgo7Rq6BnowsJKDqw2kwwWFv59emx"],"license":"GPL-3.0"},"contracts/release/utils/0.6.12/FundDeployerOwnerMixin.sol":{"keccak256":"0x82806c6999b4b7d3f1aed68f2e1ae56fc7d7ece67308493a8fad9075f080c116","urls":["bzz-raw://5dc2af5b517c6d2e3f7b57696a40067d494824fc098ee178f5870f63f611285b","dweb:/ipfs/QmZUDHC4RQ2MRA2DRbFoPMpeCkeEeciUBFp7JTsWcPhQcR"],"license":"GPL-3.0"}},"version":1},"id":242}