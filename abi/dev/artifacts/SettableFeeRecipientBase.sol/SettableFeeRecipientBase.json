{"abi":[{"type":"function","name":"getRecipientForFund","inputs":[{"name":"_comptrollerProxy","type":"address","internalType":"address"}],"outputs":[{"name":"recipient_","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"event","name":"RecipientSetForFund","inputs":[{"name":"comptrollerProxy","type":"address","indexed":true,"internalType":"address"},{"name":"recipient","type":"address","indexed":true,"internalType":"address"}],"anonymous":false}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"getRecipientForFund(address)":"62780b3c"},"rawMetadata":"{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"comptrollerProxy\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"RecipientSetForFund\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_comptrollerProxy\",\"type\":\"address\"}],\"name\":\"getRecipientForFund\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"recipient_\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Enzyme Foundation <security@enzyme.finance>\",\"kind\":\"dev\",\"methods\":{\"getRecipientForFund(address)\":{\"details\":\"address(0) signifies the VaultProxy owner\",\"params\":{\"_comptrollerProxy\":\"The ComptrollerProxy contract for the fund\"},\"returns\":{\"recipient_\":\"The recipient\"}}},\"title\":\"SettableFeeRecipientBase Contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getRecipientForFund(address)\":{\"notice\":\"Gets the recipient of the fee for a given fund\"}},\"notice\":\"A base contract to set and get a fee recipient for the inheriting fee\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/release/extensions/fee-manager/fees/utils/SettableFeeRecipientBase.sol\":\"SettableFeeRecipientBase\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":false},\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-solc-0.6/contracts/\",\":@uniswap/v3-core/=lib/uniswap-v3-core/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":morpho-blue/=lib/morpho-blue/src/libraries/\",\":openzeppelin-solc-0.6/=lib/openzeppelin-solc-0.6/contracts/\",\":openzeppelin-solc-0.7/=lib/openzeppelin-solc-0.7/contracts/\",\":openzeppelin-solc-0.8/=lib/openzeppelin-solc-0.8/contracts/\",\":uniswap-v3-core-0.8/=lib/uniswap-v3-core-0.8/\",\":uniswap-v3-core/=lib/uniswap-v3-core/\",\":uniswap-v3-periphery/=lib/uniswap-v3-periphery/contracts/\"]},\"sources\":{\"contracts/release/extensions/fee-manager/fees/utils/SettableFeeRecipientBase.sol\":{\"keccak256\":\"0x689762a5bc017be990fac089e58efacb07da67dab9f95e442c910e0751cd5157\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://0ab852d7e8b4287c2baad5f20ecc584fd177282f3ce391057f333bb6683e34c0\",\"dweb:/ipfs/Qmetig9LJ1KCGxajnLtKNWiFVbYEG5nqzqrSgjkWW31Jwr\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.6.12+commit.27d51765"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"comptrollerProxy","type":"address","indexed":true},{"internalType":"address","name":"recipient","type":"address","indexed":true}],"type":"event","name":"RecipientSetForFund","anonymous":false},{"inputs":[{"internalType":"address","name":"_comptrollerProxy","type":"address"}],"stateMutability":"view","type":"function","name":"getRecipientForFund","outputs":[{"internalType":"address","name":"recipient_","type":"address"}]}],"devdoc":{"kind":"dev","methods":{"getRecipientForFund(address)":{"details":"address(0) signifies the VaultProxy owner","params":{"_comptrollerProxy":"The ComptrollerProxy contract for the fund"},"returns":{"recipient_":"The recipient"}}},"version":1},"userdoc":{"kind":"user","methods":{"getRecipientForFund(address)":{"notice":"Gets the recipient of the fee for a given fund"}},"version":1}},"settings":{"remappings":["@openzeppelin/contracts/=lib/openzeppelin-solc-0.6/contracts/","@uniswap/v3-core/=lib/uniswap-v3-core/","ds-test/=lib/forge-std/lib/ds-test/src/","forge-std/=lib/forge-std/src/","morpho-blue/=lib/morpho-blue/src/libraries/","openzeppelin-solc-0.6/=lib/openzeppelin-solc-0.6/contracts/","openzeppelin-solc-0.7/=lib/openzeppelin-solc-0.7/contracts/","openzeppelin-solc-0.8/=lib/openzeppelin-solc-0.8/contracts/","uniswap-v3-core-0.8/=lib/uniswap-v3-core-0.8/","uniswap-v3-core/=lib/uniswap-v3-core/","uniswap-v3-periphery/=lib/uniswap-v3-periphery/contracts/"],"optimizer":{"runs":200,"details":{"peephole":true,"jumpdestRemover":true,"orderLiterals":true,"deduplicate":true,"cse":true,"constantOptimizer":true,"yul":false}},"metadata":{"bytecodeHash":"none"},"compilationTarget":{"contracts/release/extensions/fee-manager/fees/utils/SettableFeeRecipientBase.sol":"SettableFeeRecipientBase"},"evmVersion":"istanbul","libraries":{}},"sources":{"contracts/release/extensions/fee-manager/fees/utils/SettableFeeRecipientBase.sol":{"keccak256":"0x689762a5bc017be990fac089e58efacb07da67dab9f95e442c910e0751cd5157","urls":["bzz-raw://0ab852d7e8b4287c2baad5f20ecc584fd177282f3ce391057f333bb6683e34c0","dweb:/ipfs/Qmetig9LJ1KCGxajnLtKNWiFVbYEG5nqzqrSgjkWW31Jwr"],"license":"GPL-3.0"}},"version":1},"id":163}