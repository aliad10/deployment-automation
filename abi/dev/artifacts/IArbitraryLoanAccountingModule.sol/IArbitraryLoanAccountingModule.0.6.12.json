{"abi":[{"type":"function","name":"calcFaceValue","inputs":[{"name":"_totalBorrowed","type":"uint256","internalType":"uint256"},{"name":"_totalRepaid","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"faceValue_","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"configure","inputs":[{"name":"_configData","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"preBorrow","inputs":[{"name":"_prevTotalBorrowed","type":"uint256","internalType":"uint256"},{"name":"_totalRepaid","type":"uint256","internalType":"uint256"},{"name":"_borrowAmount","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"preClose","inputs":[{"name":"_totalBorrowed","type":"uint256","internalType":"uint256"},{"name":"_totalRepaid","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"preReconcile","inputs":[{"name":"_totalBorrowed","type":"uint256","internalType":"uint256"},{"name":"_prevTotalRepaid","type":"uint256","internalType":"uint256"},{"name":"_repayableLoanAssetAmount","type":"uint256","internalType":"uint256"},{"name":"_extraAssets","type":"address[]","internalType":"address[]"}],"outputs":[{"name":"repayAmount_","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"preRepay","inputs":[{"name":"_totalBorrowed","type":"uint256","internalType":"uint256"},{"name":"_prevTotalRepaid","type":"uint256","internalType":"uint256"},{"name":"_repayAmountInput","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"repayAmount_","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"receiveCallFromLoan","inputs":[{"name":"_actionData","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"calcFaceValue(uint256,uint256)":"7bb6668e","configure(bytes)":"46739e73","preBorrow(uint256,uint256,uint256)":"8602074e","preClose(uint256,uint256)":"1770ac3a","preReconcile(uint256,uint256,uint256,address[])":"e00c3490","preRepay(uint256,uint256,uint256)":"1324041c","receiveCallFromLoan(bytes)":"9e950b22"},"rawMetadata":"{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_totalBorrowed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_totalRepaid\",\"type\":\"uint256\"}],\"name\":\"calcFaceValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"faceValue_\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_configData\",\"type\":\"bytes\"}],\"name\":\"configure\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_prevTotalBorrowed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_totalRepaid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_borrowAmount\",\"type\":\"uint256\"}],\"name\":\"preBorrow\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_totalBorrowed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_totalRepaid\",\"type\":\"uint256\"}],\"name\":\"preClose\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_totalBorrowed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_prevTotalRepaid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_repayableLoanAssetAmount\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"_extraAssets\",\"type\":\"address[]\"}],\"name\":\"preReconcile\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"repayAmount_\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_totalBorrowed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_prevTotalRepaid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_repayAmountInput\",\"type\":\"uint256\"}],\"name\":\"preRepay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"repayAmount_\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_actionData\",\"type\":\"bytes\"}],\"name\":\"receiveCallFromLoan\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Enzyme Foundation <security@enzyme.finance>\",\"kind\":\"dev\",\"methods\":{\"calcFaceValue(uint256,uint256)\":{\"params\":{\"_totalBorrowed\":\"The total borrowed amount\",\"_totalRepaid\":\"The total repaid amount\"},\"returns\":{\"faceValue_\":\"The face value\"}},\"configure(bytes)\":{\"params\":{\"_configData\":\"Encoded options\"}},\"preBorrow(uint256,uint256,uint256)\":{\"params\":{\"_borrowAmount\":\"The new borrow amount\",\"_prevTotalBorrowed\":\"The total borrowed amount not including the new borrow amount\",\"_totalRepaid\":\"The total repaid amount\"}},\"preClose(uint256,uint256)\":{\"params\":{\"_totalBorrowed\":\"The total borrowed amount\",\"_totalRepaid\":\"The total repaid amount\"}},\"preReconcile(uint256,uint256,uint256,address[])\":{\"details\":\"Should not revert in case of over-repayment. Instead, it is recommended to return the full loan balance as repayAmount_ where necessary. _extraAssets allows a module to use its own pricing to calculate the value of each extra asset in terms of the loanAsset, which can be included in the repayAmount_.\",\"params\":{\"_extraAssets\":\"The extra assets (non-loanAsset) being swept to the VaultProxy\",\"_prevTotalRepaid\":\"The total repaid amount not including the reconciled assets\",\"_repayableLoanAssetAmount\":\"The loanAsset amount available for repayment\",\"_totalBorrowed\":\"The total borrowed amount\"},\"returns\":{\"repayAmount_\":\"The formatted amount to consider as repayment in terms of the loanAsset\"}},\"preRepay(uint256,uint256,uint256)\":{\"params\":{\"_prevTotalRepaid\":\"The total repaid amount not including the new repay amount\",\"_repayAmountInput\":\"The user-input repay amount\",\"_totalBorrowed\":\"The total borrowed amount\"},\"returns\":{\"repayAmount_\":\"The formatted amount to repay\"}},\"receiveCallFromLoan(bytes)\":{\"params\":{\"_actionData\":\"Encoded data for the arbitrary call\"}}},\"title\":\"IArbitraryLoanAccountingModule Interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"calcFaceValue(uint256,uint256)\":{\"notice\":\"Calculates the canonical face value of the loan\"},\"configure(bytes)\":{\"notice\":\"Configures options per-loan\"},\"preBorrow(uint256,uint256,uint256)\":{\"notice\":\"Implements logic immediately prior to effects and interactions during a borrow\"},\"preClose(uint256,uint256)\":{\"notice\":\"Implements logic immediately prior to effects and interactions when closing a loan\"},\"preReconcile(uint256,uint256,uint256,address[])\":{\"notice\":\"Implements logic immediately prior to effects and interactions during a reconciliation, and returns the formatted amount to consider as a repayment\"},\"preRepay(uint256,uint256,uint256)\":{\"notice\":\"Implements logic immediately prior to effects and interactions during a repay, and returns the formatted amount to repay (e.g., in the case of a user-input max)\"},\"receiveCallFromLoan(bytes)\":{\"notice\":\"Receives and executes an arbitrary call from the loan contract\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/release/extensions/external-position-manager/external-positions/arbitrary-loan/modules/IArbitraryLoanAccountingModule.sol\":\"IArbitraryLoanAccountingModule\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":false},\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-solc-0.6/contracts/\",\":@uniswap/v3-core/=lib/uniswap-v3-core/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":morpho-blue/=lib/morpho-blue/src/libraries/\",\":openzeppelin-solc-0.6/=lib/openzeppelin-solc-0.6/contracts/\",\":openzeppelin-solc-0.7/=lib/openzeppelin-solc-0.7/contracts/\",\":openzeppelin-solc-0.8/=lib/openzeppelin-solc-0.8/contracts/\",\":uniswap-v3-core-0.8/=lib/uniswap-v3-core-0.8/\",\":uniswap-v3-core/=lib/uniswap-v3-core/\",\":uniswap-v3-periphery/=lib/uniswap-v3-periphery/contracts/\"]},\"sources\":{\"contracts/release/extensions/external-position-manager/external-positions/arbitrary-loan/modules/IArbitraryLoanAccountingModule.sol\":{\"keccak256\":\"0x7219d165114b5ea81df12a6ee9e7b43c3cc19763e76c7e60db89519eacbaf5e6\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://eadbac0df2b7e3c74cda9293f4dda6c0d3127eea27d9d2b649cc89a3afa9aea4\",\"dweb:/ipfs/QmXgAhLqp5W4eXPK41WrCSbfGY1KFfjyc4bgMkHQd2e8WZ\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.6.12+commit.27d51765"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"uint256","name":"_totalBorrowed","type":"uint256"},{"internalType":"uint256","name":"_totalRepaid","type":"uint256"}],"stateMutability":"view","type":"function","name":"calcFaceValue","outputs":[{"internalType":"uint256","name":"faceValue_","type":"uint256"}]},{"inputs":[{"internalType":"bytes","name":"_configData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"configure"},{"inputs":[{"internalType":"uint256","name":"_prevTotalBorrowed","type":"uint256"},{"internalType":"uint256","name":"_totalRepaid","type":"uint256"},{"internalType":"uint256","name":"_borrowAmount","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"preBorrow"},{"inputs":[{"internalType":"uint256","name":"_totalBorrowed","type":"uint256"},{"internalType":"uint256","name":"_totalRepaid","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"preClose"},{"inputs":[{"internalType":"uint256","name":"_totalBorrowed","type":"uint256"},{"internalType":"uint256","name":"_prevTotalRepaid","type":"uint256"},{"internalType":"uint256","name":"_repayableLoanAssetAmount","type":"uint256"},{"internalType":"address[]","name":"_extraAssets","type":"address[]"}],"stateMutability":"nonpayable","type":"function","name":"preReconcile","outputs":[{"internalType":"uint256","name":"repayAmount_","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"_totalBorrowed","type":"uint256"},{"internalType":"uint256","name":"_prevTotalRepaid","type":"uint256"},{"internalType":"uint256","name":"_repayAmountInput","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"preRepay","outputs":[{"internalType":"uint256","name":"repayAmount_","type":"uint256"}]},{"inputs":[{"internalType":"bytes","name":"_actionData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"receiveCallFromLoan"}],"devdoc":{"kind":"dev","methods":{"calcFaceValue(uint256,uint256)":{"params":{"_totalBorrowed":"The total borrowed amount","_totalRepaid":"The total repaid amount"},"returns":{"faceValue_":"The face value"}},"configure(bytes)":{"params":{"_configData":"Encoded options"}},"preBorrow(uint256,uint256,uint256)":{"params":{"_borrowAmount":"The new borrow amount","_prevTotalBorrowed":"The total borrowed amount not including the new borrow amount","_totalRepaid":"The total repaid amount"}},"preClose(uint256,uint256)":{"params":{"_totalBorrowed":"The total borrowed amount","_totalRepaid":"The total repaid amount"}},"preReconcile(uint256,uint256,uint256,address[])":{"details":"Should not revert in case of over-repayment. Instead, it is recommended to return the full loan balance as repayAmount_ where necessary. _extraAssets allows a module to use its own pricing to calculate the value of each extra asset in terms of the loanAsset, which can be included in the repayAmount_.","params":{"_extraAssets":"The extra assets (non-loanAsset) being swept to the VaultProxy","_prevTotalRepaid":"The total repaid amount not including the reconciled assets","_repayableLoanAssetAmount":"The loanAsset amount available for repayment","_totalBorrowed":"The total borrowed amount"},"returns":{"repayAmount_":"The formatted amount to consider as repayment in terms of the loanAsset"}},"preRepay(uint256,uint256,uint256)":{"params":{"_prevTotalRepaid":"The total repaid amount not including the new repay amount","_repayAmountInput":"The user-input repay amount","_totalBorrowed":"The total borrowed amount"},"returns":{"repayAmount_":"The formatted amount to repay"}},"receiveCallFromLoan(bytes)":{"params":{"_actionData":"Encoded data for the arbitrary call"}}},"version":1},"userdoc":{"kind":"user","methods":{"calcFaceValue(uint256,uint256)":{"notice":"Calculates the canonical face value of the loan"},"configure(bytes)":{"notice":"Configures options per-loan"},"preBorrow(uint256,uint256,uint256)":{"notice":"Implements logic immediately prior to effects and interactions during a borrow"},"preClose(uint256,uint256)":{"notice":"Implements logic immediately prior to effects and interactions when closing a loan"},"preReconcile(uint256,uint256,uint256,address[])":{"notice":"Implements logic immediately prior to effects and interactions during a reconciliation, and returns the formatted amount to consider as a repayment"},"preRepay(uint256,uint256,uint256)":{"notice":"Implements logic immediately prior to effects and interactions during a repay, and returns the formatted amount to repay (e.g., in the case of a user-input max)"},"receiveCallFromLoan(bytes)":{"notice":"Receives and executes an arbitrary call from the loan contract"}},"version":1}},"settings":{"remappings":["@openzeppelin/contracts/=lib/openzeppelin-solc-0.6/contracts/","@uniswap/v3-core/=lib/uniswap-v3-core/","ds-test/=lib/forge-std/lib/ds-test/src/","forge-std/=lib/forge-std/src/","morpho-blue/=lib/morpho-blue/src/libraries/","openzeppelin-solc-0.6/=lib/openzeppelin-solc-0.6/contracts/","openzeppelin-solc-0.7/=lib/openzeppelin-solc-0.7/contracts/","openzeppelin-solc-0.8/=lib/openzeppelin-solc-0.8/contracts/","uniswap-v3-core-0.8/=lib/uniswap-v3-core-0.8/","uniswap-v3-core/=lib/uniswap-v3-core/","uniswap-v3-periphery/=lib/uniswap-v3-periphery/contracts/"],"optimizer":{"runs":200,"details":{"peephole":true,"jumpdestRemover":true,"orderLiterals":true,"deduplicate":true,"cse":true,"constantOptimizer":true,"yul":false}},"metadata":{"bytecodeHash":"none"},"compilationTarget":{"contracts/release/extensions/external-position-manager/external-positions/arbitrary-loan/modules/IArbitraryLoanAccountingModule.sol":"IArbitraryLoanAccountingModule"},"evmVersion":"istanbul","libraries":{}},"sources":{"contracts/release/extensions/external-position-manager/external-positions/arbitrary-loan/modules/IArbitraryLoanAccountingModule.sol":{"keccak256":"0x7219d165114b5ea81df12a6ee9e7b43c3cc19763e76c7e60db89519eacbaf5e6","urls":["bzz-raw://eadbac0df2b7e3c74cda9293f4dda6c0d3127eea27d9d2b649cc89a3afa9aea4","dweb:/ipfs/QmXgAhLqp5W4eXPK41WrCSbfGY1KFfjyc4bgMkHQd2e8WZ"],"license":"GPL-3.0"}},"version":1},"id":141}