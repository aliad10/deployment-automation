{"abi":[{"type":"constructor","inputs":[{"name":"_policyManager","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"activateForFund","inputs":[{"name":"","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"addFundSettings","inputs":[{"name":"_comptrollerProxy","type":"address","internalType":"address"},{"name":"_encodedSettings","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"canDisable","inputs":[],"outputs":[{"name":"canDisable_","type":"bool","internalType":"bool"}],"stateMutability":"pure"},{"type":"function","name":"getPolicyManager","inputs":[],"outputs":[{"name":"policyManager_","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"identifier","inputs":[],"outputs":[{"name":"identifier_","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"implementedHooks","inputs":[],"outputs":[{"name":"implementedHooks_","type":"uint8[]","internalType":"enum IPolicyManager.PolicyHook[]"}],"stateMutability":"pure"},{"type":"function","name":"updateFundSettings","inputs":[{"name":"","type":"address","internalType":"address"},{"name":"","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"validateRule","inputs":[{"name":"_comptrollerProxy","type":"address","internalType":"address"},{"name":"_hook","type":"uint8","internalType":"enum IPolicyManager.PolicyHook"},{"name":"_encodedArgs","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"isValid_","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"activateForFund(address)":"ceb9a0ad","addFundSettings(address,bytes)":"0f5f6b4f","canDisable()":"1ef92578","getPolicyManager()":"d44ad6cb","identifier()":"7998a1c4","implementedHooks()":"cbf54bb2","updateFundSettings(address,bytes)":"0d4d7510","validateRule(address,uint8,bytes)":"579be718"},"rawMetadata":"{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_policyManager\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"activateForFund\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_comptrollerProxy\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_encodedSettings\",\"type\":\"bytes\"}],\"name\":\"addFundSettings\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"canDisable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"canDisable_\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPolicyManager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"policyManager_\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"identifier\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"identifier_\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"implementedHooks\",\"outputs\":[{\"internalType\":\"enum IPolicyManager.PolicyHook[]\",\"name\":\"implementedHooks_\",\"type\":\"uint8[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"updateFundSettings\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_comptrollerProxy\",\"type\":\"address\"},{\"internalType\":\"enum IPolicyManager.PolicyHook\",\"name\":\"_hook\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"_encodedArgs\",\"type\":\"bytes\"}],\"name\":\"validateRule\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isValid_\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Enzyme Foundation <security@enzyme.finance>\",\"kind\":\"dev\",\"methods\":{\"activateForFund(address)\":{\"details\":\"Unimplemented by default, can be overridden by the policy\"},\"canDisable()\":{\"details\":\"False by default, can be overridden by the policy\",\"returns\":{\"canDisable_\":\"True if the policy can be disabled\"}},\"getPolicyManager()\":{\"returns\":{\"policyManager_\":\"The `POLICY_MANAGER` variable value\"}},\"updateFundSettings(address,bytes)\":{\"details\":\"Disallowed by default, can be overridden by the policy\"}},\"title\":\"PolicyBase Contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"activateForFund(address)\":{\"notice\":\"Validates and initializes a policy as necessary prior to fund activation\"},\"canDisable()\":{\"notice\":\"Whether or not the policy can be disabled\"},\"getPolicyManager()\":{\"notice\":\"Gets the `POLICY_MANAGER` variable value\"},\"updateFundSettings(address,bytes)\":{\"notice\":\"Updates the policy settings for a fund\"}},\"notice\":\"Abstract base contract for all policies\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/release/extensions/policy-manager/policies/utils/0.6.12/PolicyBase.sol\":\"PolicyBase\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":false},\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-solc-0.6/contracts/\",\":@uniswap/v3-core/=lib/uniswap-v3-core/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":morpho-blue/=lib/morpho-blue/src/libraries/\",\":openzeppelin-solc-0.6/=lib/openzeppelin-solc-0.6/contracts/\",\":openzeppelin-solc-0.7/=lib/openzeppelin-solc-0.7/contracts/\",\":openzeppelin-solc-0.8/=lib/openzeppelin-solc-0.8/contracts/\",\":uniswap-v3-core-0.8/=lib/uniswap-v3-core-0.8/\",\":uniswap-v3-core/=lib/uniswap-v3-core/\",\":uniswap-v3-periphery/=lib/uniswap-v3-periphery/contracts/\"]},\"sources\":{\"contracts/release/extensions/policy-manager/IPolicy.sol\":{\"keccak256\":\"0x03729a53e85e8656fa328361067b3c90b8e80471a0ea92466c41f9736eb5a59f\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://78afa48db3a3b6892012cb87612a6332acc3a229c2dc9a45f479b8c4998988b4\",\"dweb:/ipfs/QmY5UnfwTLoBc5m9yugCJnXZ3dgP5MzumbcsUmsqFyg2D9\"]},\"contracts/release/extensions/policy-manager/IPolicyManager.sol\":{\"keccak256\":\"0x984d706ca9d85505804bd01cd451b7670fdefa2adb745f55bb42e75d8899a707\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://e18e70c6c30d3d8dda3db1a7308c5cc115df0a8aa7db1d43bf498d31f963bb98\",\"dweb:/ipfs/QmRPes4252eLQkU7T5UsosVgmapjJPhoV1zDNEnqwpxQDV\"]},\"contracts/release/extensions/policy-manager/policies/utils/0.6.12/PolicyBase.sol\":{\"keccak256\":\"0x4c01a2b092a582bfb9154d482652d62b3f723e27f487082e9c22418aef057a81\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://1c79e10bdc78c829e72dc447fa384f57cafba076a0bd58cc4b3c8caee792f6c8\",\"dweb:/ipfs/QmQafS3CakckVPFbaH9xPPfSiUWytBzkUssDVHJiRS8oJ3\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.6.12+commit.27d51765"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"_policyManager","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"activateForFund"},{"inputs":[{"internalType":"address","name":"_comptrollerProxy","type":"address"},{"internalType":"bytes","name":"_encodedSettings","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"addFundSettings"},{"inputs":[],"stateMutability":"pure","type":"function","name":"canDisable","outputs":[{"internalType":"bool","name":"canDisable_","type":"bool"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getPolicyManager","outputs":[{"internalType":"address","name":"policyManager_","type":"address"}]},{"inputs":[],"stateMutability":"pure","type":"function","name":"identifier","outputs":[{"internalType":"string","name":"identifier_","type":"string"}]},{"inputs":[],"stateMutability":"pure","type":"function","name":"implementedHooks","outputs":[{"internalType":"enum IPolicyManager.PolicyHook[]","name":"implementedHooks_","type":"uint8[]"}]},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"updateFundSettings"},{"inputs":[{"internalType":"address","name":"_comptrollerProxy","type":"address"},{"internalType":"enum IPolicyManager.PolicyHook","name":"_hook","type":"uint8"},{"internalType":"bytes","name":"_encodedArgs","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"validateRule","outputs":[{"internalType":"bool","name":"isValid_","type":"bool"}]}],"devdoc":{"kind":"dev","methods":{"activateForFund(address)":{"details":"Unimplemented by default, can be overridden by the policy"},"canDisable()":{"details":"False by default, can be overridden by the policy","returns":{"canDisable_":"True if the policy can be disabled"}},"getPolicyManager()":{"returns":{"policyManager_":"The `POLICY_MANAGER` variable value"}},"updateFundSettings(address,bytes)":{"details":"Disallowed by default, can be overridden by the policy"}},"version":1},"userdoc":{"kind":"user","methods":{"activateForFund(address)":{"notice":"Validates and initializes a policy as necessary prior to fund activation"},"canDisable()":{"notice":"Whether or not the policy can be disabled"},"getPolicyManager()":{"notice":"Gets the `POLICY_MANAGER` variable value"},"updateFundSettings(address,bytes)":{"notice":"Updates the policy settings for a fund"}},"version":1}},"settings":{"remappings":["@openzeppelin/contracts/=lib/openzeppelin-solc-0.6/contracts/","@uniswap/v3-core/=lib/uniswap-v3-core/","ds-test/=lib/forge-std/lib/ds-test/src/","forge-std/=lib/forge-std/src/","morpho-blue/=lib/morpho-blue/src/libraries/","openzeppelin-solc-0.6/=lib/openzeppelin-solc-0.6/contracts/","openzeppelin-solc-0.7/=lib/openzeppelin-solc-0.7/contracts/","openzeppelin-solc-0.8/=lib/openzeppelin-solc-0.8/contracts/","uniswap-v3-core-0.8/=lib/uniswap-v3-core-0.8/","uniswap-v3-core/=lib/uniswap-v3-core/","uniswap-v3-periphery/=lib/uniswap-v3-periphery/contracts/"],"optimizer":{"runs":200,"details":{"peephole":true,"jumpdestRemover":true,"orderLiterals":true,"deduplicate":true,"cse":true,"constantOptimizer":true,"yul":false}},"metadata":{"bytecodeHash":"none"},"compilationTarget":{"contracts/release/extensions/policy-manager/policies/utils/0.6.12/PolicyBase.sol":"PolicyBase"},"evmVersion":"istanbul","libraries":{}},"sources":{"contracts/release/extensions/policy-manager/IPolicy.sol":{"keccak256":"0x03729a53e85e8656fa328361067b3c90b8e80471a0ea92466c41f9736eb5a59f","urls":["bzz-raw://78afa48db3a3b6892012cb87612a6332acc3a229c2dc9a45f479b8c4998988b4","dweb:/ipfs/QmY5UnfwTLoBc5m9yugCJnXZ3dgP5MzumbcsUmsqFyg2D9"],"license":"GPL-3.0"},"contracts/release/extensions/policy-manager/IPolicyManager.sol":{"keccak256":"0x984d706ca9d85505804bd01cd451b7670fdefa2adb745f55bb42e75d8899a707","urls":["bzz-raw://e18e70c6c30d3d8dda3db1a7308c5cc115df0a8aa7db1d43bf498d31f963bb98","dweb:/ipfs/QmRPes4252eLQkU7T5UsosVgmapjJPhoV1zDNEnqwpxQDV"],"license":"GPL-3.0"},"contracts/release/extensions/policy-manager/policies/utils/0.6.12/PolicyBase.sol":{"keccak256":"0x4c01a2b092a582bfb9154d482652d62b3f723e27f487082e9c22418aef057a81","urls":["bzz-raw://1c79e10bdc78c829e72dc447fa384f57cafba076a0bd58cc4b3c8caee792f6c8","dweb:/ipfs/QmQafS3CakckVPFbaH9xPPfSiUWytBzkUssDVHJiRS8oJ3"],"license":"GPL-3.0"}},"version":1},"id":239}