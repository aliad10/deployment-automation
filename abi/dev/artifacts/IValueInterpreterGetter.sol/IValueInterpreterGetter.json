{"abi":[{"type":"function","name":"getValueInterpreter","inputs":[],"outputs":[{"name":"valueInterpreterAddress_","type":"address","internalType":"address"}],"stateMutability":"view"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"getValueInterpreter()":"875fb4b3"},"rawMetadata":"{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"getValueInterpreter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"valueInterpreterAddress_\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"This interface is used to cast an address into an interface containing a getValueInterpreter getter\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/persistent/off-chain/fund-data-provider/interfaces/IValueInterpreterGetter.sol\":\"IValueInterpreterGetter\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":false},\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-solc-0.6/contracts/\",\":@uniswap/v3-core/=lib/uniswap-v3-core/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":morpho-blue/=lib/morpho-blue/src/libraries/\",\":openzeppelin-solc-0.6/=lib/openzeppelin-solc-0.6/contracts/\",\":openzeppelin-solc-0.7/=lib/openzeppelin-solc-0.7/contracts/\",\":openzeppelin-solc-0.8/=lib/openzeppelin-solc-0.8/contracts/\",\":uniswap-v3-core-0.8/=lib/uniswap-v3-core-0.8/\",\":uniswap-v3-core/=lib/uniswap-v3-core/\",\":uniswap-v3-periphery/=lib/uniswap-v3-periphery/contracts/\"]},\"sources\":{\"contracts/persistent/off-chain/fund-data-provider/interfaces/IValueInterpreterGetter.sol\":{\"keccak256\":\"0x00009c57903f80af5780552d16c8831e6431ac275133bae3269d6053265de54d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d36740d06907a5fa3102421ba87d078d9dc0b1028a137ac736eab8de615cafe6\",\"dweb:/ipfs/QmcepdYWGbrHFH9mhoKrEAT7cH5H1fcg57TQ7TDjXvd8ze\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.6.12+commit.27d51765"},"language":"Solidity","output":{"abi":[{"inputs":[],"stateMutability":"view","type":"function","name":"getValueInterpreter","outputs":[{"internalType":"address","name":"valueInterpreterAddress_","type":"address"}]}],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@openzeppelin/contracts/=lib/openzeppelin-solc-0.6/contracts/","@uniswap/v3-core/=lib/uniswap-v3-core/","ds-test/=lib/forge-std/lib/ds-test/src/","forge-std/=lib/forge-std/src/","morpho-blue/=lib/morpho-blue/src/libraries/","openzeppelin-solc-0.6/=lib/openzeppelin-solc-0.6/contracts/","openzeppelin-solc-0.7/=lib/openzeppelin-solc-0.7/contracts/","openzeppelin-solc-0.8/=lib/openzeppelin-solc-0.8/contracts/","uniswap-v3-core-0.8/=lib/uniswap-v3-core-0.8/","uniswap-v3-core/=lib/uniswap-v3-core/","uniswap-v3-periphery/=lib/uniswap-v3-periphery/contracts/"],"optimizer":{"runs":200,"details":{"peephole":true,"jumpdestRemover":true,"orderLiterals":true,"deduplicate":true,"cse":true,"constantOptimizer":true,"yul":false}},"metadata":{"bytecodeHash":"none"},"compilationTarget":{"contracts/persistent/off-chain/fund-data-provider/interfaces/IValueInterpreterGetter.sol":"IValueInterpreterGetter"},"evmVersion":"istanbul","libraries":{}},"sources":{"contracts/persistent/off-chain/fund-data-provider/interfaces/IValueInterpreterGetter.sol":{"keccak256":"0x00009c57903f80af5780552d16c8831e6431ac275133bae3269d6053265de54d","urls":["bzz-raw://d36740d06907a5fa3102421ba87d078d9dc0b1028a137ac736eab8de615cafe6","dweb:/ipfs/QmcepdYWGbrHFH9mhoKrEAT7cH5H1fcg57TQ7TDjXvd8ze"],"license":"MIT"}},"version":1},"id":87}