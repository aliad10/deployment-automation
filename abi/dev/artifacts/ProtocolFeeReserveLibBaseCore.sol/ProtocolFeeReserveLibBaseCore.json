{"abi":[{"type":"function","name":"getDispatcher","inputs":[],"outputs":[{"name":"dispatcher_","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"getProtocolFeeReserveLib","inputs":[],"outputs":[{"name":"protocolFeeReserveLib_","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"init","inputs":[{"name":"_dispatcher","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"proxiableUUID","inputs":[],"outputs":[{"name":"uuid_","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"setProtocolFeeReserveLib","inputs":[{"name":"_nextProtocolFeeReserveLib","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"event","name":"ProtocolFeeReserveLibSet","inputs":[{"name":"nextProtocolFeeReserveLib","type":"address","indexed":false,"internalType":"address"}],"anonymous":false}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"getDispatcher()":"ebb3d589","getProtocolFeeReserveLib()":"b3e2546b","init(address)":"19ab453c","proxiableUUID()":"52d1902d","setProtocolFeeReserveLib(address)":"c75a882a"},"rawMetadata":"{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"nextProtocolFeeReserveLib\",\"type\":\"address\"}],\"name\":\"ProtocolFeeReserveLibSet\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"getDispatcher\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"dispatcher_\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getProtocolFeeReserveLib\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"protocolFeeReserveLib_\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_dispatcher\",\"type\":\"address\"}],\"name\":\"init\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"uuid_\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nextProtocolFeeReserveLib\",\"type\":\"address\"}],\"name\":\"setProtocolFeeReserveLib\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Enzyme Foundation <security@enzyme.finance>\",\"details\":\"To be inherited by the first ProtocolFeeReserveLibBase implementation only. DO NOT EDIT CONTRACT.\",\"kind\":\"dev\",\"methods\":{\"getDispatcher()\":{\"returns\":{\"dispatcher_\":\"The `dispatcher` variable value\"}},\"getProtocolFeeReserveLib()\":{\"returns\":{\"protocolFeeReserveLib_\":\"The address of the ProtocolFeeReserveLib target\"}},\"init(address)\":{\"details\":\"Serves as a pseudo-constructor\",\"params\":{\"_dispatcher\":\"The Dispatcher contract\"}},\"proxiableUUID()\":{\"returns\":{\"uuid_\":\"The bytes32 hash representing the UUID\"}},\"setProtocolFeeReserveLib(address)\":{\"details\":\"This function is absolutely critical. __updateCodeAddress() validates that the target is a valid Proxiable contract instance. Does not block _nextProtocolFeeReserveLib from being the same as the current ProtocolFeeReserveLib\",\"params\":{\"_nextProtocolFeeReserveLib\":\"The address to set as the ProtocolFeeReserveLib\"}}},\"title\":\"ProtocolFeeReserveLibBaseCore Contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getDispatcher()\":{\"notice\":\"Gets the `dispatcher` variable\"},\"getProtocolFeeReserveLib()\":{\"notice\":\"Gets the ProtocolFeeReserveLib target for the ProtocolFeeReserveProxy\"},\"init(address)\":{\"notice\":\"Initializes the ProtocolFeeReserveProxy with core configuration\"},\"proxiableUUID()\":{\"notice\":\"Returns a unique bytes32 hash for ProtocolFeeReserveLib instances\"},\"setProtocolFeeReserveLib(address)\":{\"notice\":\"Sets the ProtocolFeeReserveLib target for the ProtocolFeeReserveProxy\"}},\"notice\":\"The core implementation of ProtocolFeeReserveLib\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/persistent/protocol-fee-reserve/bases/ProtocolFeeReserveLibBaseCore.sol\":\"ProtocolFeeReserveLibBaseCore\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-solc-0.6/contracts/\",\":@uniswap/v3-core/=lib/uniswap-v3-core/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":morpho-blue/=lib/morpho-blue/src/libraries/\",\":openzeppelin-solc-0.6/=lib/openzeppelin-solc-0.6/contracts/\",\":openzeppelin-solc-0.7/=lib/openzeppelin-solc-0.7/contracts/\",\":openzeppelin-solc-0.8/=lib/openzeppelin-solc-0.8/contracts/\",\":uniswap-v3-core-0.8/=lib/uniswap-v3-core-0.8/\",\":uniswap-v3-core/=lib/uniswap-v3-core/\",\":uniswap-v3-periphery/=lib/uniswap-v3-periphery/contracts/\"]},\"sources\":{\"contracts/persistent/dispatcher/IDispatcher.sol\":{\"keccak256\":\"0x3c4936f0c423f8510174004a48d890bb27b2b77625e8c00940e60a0c1a666d18\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://f168a3b1e77bd52baed8e86562648f9e98e33d9e6a188b4e039d86dd0edd3df6\",\"dweb:/ipfs/QmbpSroYU8FEfb2fttYMsF9CBPArtym8PCRRHvXZSTsKc3\"]},\"contracts/persistent/protocol-fee-reserve/bases/ProtocolFeeReserveLibBaseCore.sol\":{\"keccak256\":\"0xf99b62320151db56a8baa74533d251f1a9a01731ec920dfa99971de6fd3addb4\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://0fd412d85e4e23400abdee54c40506c37b15f44327675cfcc7ad278dff9f5143\",\"dweb:/ipfs/QmVXfLREk2QCqPGtSsMbNcaJVTfF6dAMgpCz8tyQnSW9qS\"]},\"contracts/persistent/protocol-fee-reserve/utils/ProtocolFeeProxyConstants.sol\":{\"keccak256\":\"0xbc08c0d5a06a23ef0add53cdb92ee96e7fcb94a6f758c8395775548593b4df12\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://df32f9f3d0e9a05fe0be06d992762cd9f7c08de5c074ef8099ccb4663b9521d0\",\"dweb:/ipfs/Qmba8imEGVSCHn1zhZb14R1HUN5hQ5h8cGCNcYZpMsVAvK\"]},\"contracts/persistent/protocol-fee-reserve/utils/ProxiableProtocolFeeReserveLib.sol\":{\"keccak256\":\"0xc1d17aa1e90b4fc4be3f3b86afc05d2efd525fe57964fdb4f9cfb19448761acc\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://08528aee5a1066f327c6ecf62a891b63d754c1f522580ddbcd6633b3983e24ae\",\"dweb:/ipfs/QmTvnb3vnuL7uXnrm3gXmDu1bhdwufx1Rq6hdt2bjbwFRN\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.6.12+commit.27d51765"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"nextProtocolFeeReserveLib","type":"address","indexed":false}],"type":"event","name":"ProtocolFeeReserveLibSet","anonymous":false},{"inputs":[],"stateMutability":"view","type":"function","name":"getDispatcher","outputs":[{"internalType":"address","name":"dispatcher_","type":"address"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getProtocolFeeReserveLib","outputs":[{"internalType":"address","name":"protocolFeeReserveLib_","type":"address"}]},{"inputs":[{"internalType":"address","name":"_dispatcher","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"init"},{"inputs":[],"stateMutability":"pure","type":"function","name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"uuid_","type":"bytes32"}]},{"inputs":[{"internalType":"address","name":"_nextProtocolFeeReserveLib","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"setProtocolFeeReserveLib"}],"devdoc":{"kind":"dev","methods":{"getDispatcher()":{"returns":{"dispatcher_":"The `dispatcher` variable value"}},"getProtocolFeeReserveLib()":{"returns":{"protocolFeeReserveLib_":"The address of the ProtocolFeeReserveLib target"}},"init(address)":{"details":"Serves as a pseudo-constructor","params":{"_dispatcher":"The Dispatcher contract"}},"proxiableUUID()":{"returns":{"uuid_":"The bytes32 hash representing the UUID"}},"setProtocolFeeReserveLib(address)":{"details":"This function is absolutely critical. __updateCodeAddress() validates that the target is a valid Proxiable contract instance. Does not block _nextProtocolFeeReserveLib from being the same as the current ProtocolFeeReserveLib","params":{"_nextProtocolFeeReserveLib":"The address to set as the ProtocolFeeReserveLib"}}},"version":1},"userdoc":{"kind":"user","methods":{"getDispatcher()":{"notice":"Gets the `dispatcher` variable"},"getProtocolFeeReserveLib()":{"notice":"Gets the ProtocolFeeReserveLib target for the ProtocolFeeReserveProxy"},"init(address)":{"notice":"Initializes the ProtocolFeeReserveProxy with core configuration"},"proxiableUUID()":{"notice":"Returns a unique bytes32 hash for ProtocolFeeReserveLib instances"},"setProtocolFeeReserveLib(address)":{"notice":"Sets the ProtocolFeeReserveLib target for the ProtocolFeeReserveProxy"}},"version":1}},"settings":{"remappings":["@openzeppelin/contracts/=lib/openzeppelin-solc-0.6/contracts/","@uniswap/v3-core/=lib/uniswap-v3-core/","ds-test/=lib/forge-std/lib/ds-test/src/","forge-std/=lib/forge-std/src/","morpho-blue/=lib/morpho-blue/src/libraries/","openzeppelin-solc-0.6/=lib/openzeppelin-solc-0.6/contracts/","openzeppelin-solc-0.7/=lib/openzeppelin-solc-0.7/contracts/","openzeppelin-solc-0.8/=lib/openzeppelin-solc-0.8/contracts/","uniswap-v3-core-0.8/=lib/uniswap-v3-core-0.8/","uniswap-v3-core/=lib/uniswap-v3-core/","uniswap-v3-periphery/=lib/uniswap-v3-periphery/contracts/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"none"},"compilationTarget":{"contracts/persistent/protocol-fee-reserve/bases/ProtocolFeeReserveLibBaseCore.sol":"ProtocolFeeReserveLibBaseCore"},"evmVersion":"istanbul","libraries":{}},"sources":{"contracts/persistent/dispatcher/IDispatcher.sol":{"keccak256":"0x3c4936f0c423f8510174004a48d890bb27b2b77625e8c00940e60a0c1a666d18","urls":["bzz-raw://f168a3b1e77bd52baed8e86562648f9e98e33d9e6a188b4e039d86dd0edd3df6","dweb:/ipfs/QmbpSroYU8FEfb2fttYMsF9CBPArtym8PCRRHvXZSTsKc3"],"license":"GPL-3.0"},"contracts/persistent/protocol-fee-reserve/bases/ProtocolFeeReserveLibBaseCore.sol":{"keccak256":"0xf99b62320151db56a8baa74533d251f1a9a01731ec920dfa99971de6fd3addb4","urls":["bzz-raw://0fd412d85e4e23400abdee54c40506c37b15f44327675cfcc7ad278dff9f5143","dweb:/ipfs/QmVXfLREk2QCqPGtSsMbNcaJVTfF6dAMgpCz8tyQnSW9qS"],"license":"GPL-3.0"},"contracts/persistent/protocol-fee-reserve/utils/ProtocolFeeProxyConstants.sol":{"keccak256":"0xbc08c0d5a06a23ef0add53cdb92ee96e7fcb94a6f758c8395775548593b4df12","urls":["bzz-raw://df32f9f3d0e9a05fe0be06d992762cd9f7c08de5c074ef8099ccb4663b9521d0","dweb:/ipfs/Qmba8imEGVSCHn1zhZb14R1HUN5hQ5h8cGCNcYZpMsVAvK"],"license":"GPL-3.0"},"contracts/persistent/protocol-fee-reserve/utils/ProxiableProtocolFeeReserveLib.sol":{"keccak256":"0xc1d17aa1e90b4fc4be3f3b86afc05d2efd525fe57964fdb4f9cfb19448761acc","urls":["bzz-raw://08528aee5a1066f327c6ecf62a891b63d754c1f522580ddbcd6633b3983e24ae","dweb:/ipfs/QmTvnb3vnuL7uXnrm3gXmDu1bhdwufx1Rq6hdt2bjbwFRN"],"license":"GPL-3.0"}},"version":1},"id":92}