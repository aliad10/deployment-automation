{"abi":[{"type":"constructor","inputs":[{"name":"_feeManager","type":"address","internalType":"address"},{"name":"_settlementType","type":"uint8","internalType":"enum IFeeManager.SettlementType"}],"stateMutability":"nonpayable"},{"type":"function","name":"activateForFund","inputs":[{"name":"","type":"address","internalType":"address"},{"name":"","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"addFundSettings","inputs":[{"name":"_comptrollerProxy","type":"address","internalType":"address"},{"name":"_settingsData","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"getFeeManager","inputs":[],"outputs":[{"name":"feeManager_","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"getRateForFund","inputs":[{"name":"_comptrollerProxy","type":"address","internalType":"address"}],"outputs":[{"name":"rate_","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getRecipientForFund","inputs":[{"name":"","type":"address","internalType":"address"}],"outputs":[{"name":"recipient_","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"getSettlementType","inputs":[],"outputs":[{"name":"settlementType_","type":"uint8","internalType":"enum IFeeManager.SettlementType"}],"stateMutability":"view"},{"type":"function","name":"payout","inputs":[{"name":"","type":"address","internalType":"address"},{"name":"","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"settle","inputs":[{"name":"_comptrollerProxy","type":"address","internalType":"address"},{"name":"","type":"address","internalType":"address"},{"name":"","type":"uint8","internalType":"enum IFeeManager.FeeHook"},{"name":"_settlementData","type":"bytes","internalType":"bytes"},{"name":"","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"settlementType_","type":"uint8","internalType":"enum IFeeManager.SettlementType"},{"name":"payer_","type":"address","internalType":"address"},{"name":"sharesDue_","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"settlesOnHook","inputs":[{"name":"_hook","type":"uint8","internalType":"enum IFeeManager.FeeHook"}],"outputs":[{"name":"settles_","type":"bool","internalType":"bool"},{"name":"usesGav_","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"update","inputs":[{"name":"","type":"address","internalType":"address"},{"name":"","type":"address","internalType":"address"},{"name":"","type":"uint8","internalType":"enum IFeeManager.FeeHook"},{"name":"","type":"bytes","internalType":"bytes"},{"name":"","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"updatesOnHook","inputs":[{"name":"","type":"uint8","internalType":"enum IFeeManager.FeeHook"}],"outputs":[{"name":"updates_","type":"bool","internalType":"bool"},{"name":"usesGav_","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"event","name":"FundSettingsAdded","inputs":[{"name":"comptrollerProxy","type":"address","indexed":true,"internalType":"address"},{"name":"rate","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"Settled","inputs":[{"name":"comptrollerProxy","type":"address","indexed":true,"internalType":"address"},{"name":"payer","type":"address","indexed":true,"internalType":"address"},{"name":"sharesQuantity","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"activateForFund(address,address)":"3146d058","addFundSettings(address,bytes)":"0f5f6b4f","getFeeManager()":"f2d63826","getRateForFund(address)":"3eecc2bf","getRecipientForFund(address)":"62780b3c","getSettlementType()":"7bdd5b1d","payout(address,address)":"b78b4813","settle(address,address,uint8,bytes,uint256)":"41892d7e","settlesOnHook(uint8)":"320f0ddd","update(address,address,uint8,bytes,uint256)":"233faf5f","updatesOnHook(uint8)":"e337a91f"},"rawMetadata":"{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeManager\",\"type\":\"address\"},{\"internalType\":\"enum IFeeManager.SettlementType\",\"name\":\"_settlementType\",\"type\":\"uint8\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"comptrollerProxy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"}],\"name\":\"FundSettingsAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"comptrollerProxy\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"payer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"sharesQuantity\",\"type\":\"uint256\"}],\"name\":\"Settled\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"activateForFund\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_comptrollerProxy\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_settingsData\",\"type\":\"bytes\"}],\"name\":\"addFundSettings\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFeeManager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"feeManager_\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_comptrollerProxy\",\"type\":\"address\"}],\"name\":\"getRateForFund\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"rate_\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"getRecipientForFund\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"recipient_\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSettlementType\",\"outputs\":[{\"internalType\":\"enum IFeeManager.SettlementType\",\"name\":\"settlementType_\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"payout\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_comptrollerProxy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"enum IFeeManager.FeeHook\",\"name\":\"\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"_settlementData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"settle\",\"outputs\":[{\"internalType\":\"enum IFeeManager.SettlementType\",\"name\":\"settlementType_\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"payer_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"sharesDue_\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum IFeeManager.FeeHook\",\"name\":\"_hook\",\"type\":\"uint8\"}],\"name\":\"settlesOnHook\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"settles_\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"usesGav_\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"enum IFeeManager.FeeHook\",\"name\":\"\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"update\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum IFeeManager.FeeHook\",\"name\":\"\",\"type\":\"uint8\"}],\"name\":\"updatesOnHook\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"updates_\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"usesGav_\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Enzyme Council <security@enzyme.finance>\",\"kind\":\"dev\",\"methods\":{\"activateForFund(address,address)\":{\"details\":\"Unimplemented by default, may be overrode.\"},\"addFundSettings(address,bytes)\":{\"params\":{\"_comptrollerProxy\":\"The ComptrollerProxy of the fund\",\"_settingsData\":\"Encoded settings to apply to the fee for a fund\"}},\"getFeeManager()\":{\"returns\":{\"feeManager_\":\"The `FEE_MANAGER` variable value\"}},\"getRateForFund(address)\":{\"params\":{\"_comptrollerProxy\":\"The ComptrollerProxy contract for the fund\"},\"returns\":{\"rate_\":\"The `rate` variable value\"}},\"getRecipientForFund(address)\":{\"details\":\"address(0) signifies the VaultProxy owner. Returns address(0) by default, can be overridden by fee.\"},\"getSettlementType()\":{\"returns\":{\"settlementType_\":\"The `SETTLEMENT_TYPE` variable value\"}},\"payout(address,address)\":{\"details\":\"Returns false by default, can be overridden by fee\"},\"settle(address,address,uint8,bytes,uint256)\":{\"params\":{\"_comptrollerProxy\":\"The ComptrollerProxy of the fund\",\"_settlementData\":\"Encoded args to use in calculating the settlement\"},\"returns\":{\"payer_\":\"The payer of shares due\",\"settlementType_\":\"The type of settlement\",\"sharesDue_\":\"The amount of shares due\"}},\"settlesOnHook(uint8)\":{\"params\":{\"_hook\":\"The FeeHook\"},\"returns\":{\"settles_\":\"True if the fee settles on the _hook\",\"usesGav_\":\"True if the fee uses GAV during settle() for the _hook\"}},\"update(address,address,uint8,bytes,uint256)\":{\"details\":\"Unimplemented by default, can be overridden by fee\"},\"updatesOnHook(uint8)\":{\"details\":\"Returns false values by default, can be overridden by fee\",\"returns\":{\"updates_\":\"True if the fee updates on the _hook\",\"usesGav_\":\"True if the fee uses GAV during update() for the _hook\"}}},\"title\":\"EntranceRateFeeBase Contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"activateForFund(address,address)\":{\"notice\":\"Allows Fee to run logic during fund activation\"},\"addFundSettings(address,bytes)\":{\"notice\":\"Add the initial fee settings for a fund\"},\"getFeeManager()\":{\"notice\":\"Gets the `FEE_MANAGER` variable\"},\"getRateForFund(address)\":{\"notice\":\"Gets the `rate` variable for a fund\"},\"getRecipientForFund(address)\":{\"notice\":\"Gets the recipient of the fee for a given fund\"},\"getSettlementType()\":{\"notice\":\"Gets the `SETTLEMENT_TYPE` variable\"},\"payout(address,address)\":{\"notice\":\"Runs payout logic for a fee that utilizes shares outstanding as its settlement type\"},\"settle(address,address,uint8,bytes,uint256)\":{\"notice\":\"Settles the fee\"},\"settlesOnHook(uint8)\":{\"notice\":\"Gets whether the fee settles and requires GAV on a particular hook\"},\"update(address,address,uint8,bytes,uint256)\":{\"notice\":\"Update fee state after all settlement has occurred during a given fee hook\"},\"updatesOnHook(uint8)\":{\"notice\":\"Gets whether the fee updates and requires GAV on a particular hook\"}},\"notice\":\"Calculates a fee based on a rate to be charged to an investor upon entering a fund\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/release/extensions/fee-manager/fees/utils/EntranceRateFeeBase.sol\":\"EntranceRateFeeBase\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":false},\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-solc-0.6/contracts/\",\":@uniswap/v3-core/=lib/uniswap-v3-core/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-solc-0.6/=lib/openzeppelin-solc-0.6/contracts/\",\":openzeppelin-solc-0.7/=lib/openzeppelin-solc-0.7/contracts/\",\":openzeppelin-solc-0.8/=lib/openzeppelin-solc-0.8/contracts/\",\":uniswap-v3-core-0.8/=lib/uniswap-v3-core-0.8/\",\":uniswap-v3-core/=lib/uniswap-v3-core/\",\":uniswap-v3-periphery-0.8/=lib/uniswap-v3-periphery-0.8/contracts/\",\":uniswap-v3-periphery/=lib/uniswap-v3-periphery/contracts/\"]},\"sources\":{\"contracts/release/extensions/fee-manager/IFee.sol\":{\"keccak256\":\"0xd2f12a17ef24886db69c60448ccb17b5e091b83f759fafbd52edc57f42205249\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://1f0248ebab4b2bef4b4f20b5a3427e9094822bcd6074c336293dd3aaa348a770\",\"dweb:/ipfs/QmdyvS4CSGzLqQG4xyt3QNWExoVR7rPDQpLKWg1xthkhMA\"]},\"contracts/release/extensions/fee-manager/IFeeManager.sol\":{\"keccak256\":\"0x2935dcecc8c9d8f43335e79634e17fb5c0c7d49ed3d9c540a72e451224b7691a\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://6d02004c1479de6e757a232adc541c88dba310a7eb73d6e6131beff04582d0ed\",\"dweb:/ipfs/QmfCNhVodCmnmfnqhKB6xz7cHxMFMwvkRSTzHjcAu1CKvA\"]},\"contracts/release/extensions/fee-manager/fees/utils/EntranceRateFeeBase.sol\":{\"keccak256\":\"0xc8edb3b03b0c53e4cfb5bc4f9704c45a791e97f479cb9612c830df524444522e\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://37cc7122b29347865dc6d231f2ec5cfa0de142b5b94838be6b76186c60bc9f00\",\"dweb:/ipfs/QmWNF7fB7StgMnFnUyhGZN8noBnUCnbLWqLyiXNhUdf15a\"]},\"contracts/release/extensions/fee-manager/fees/utils/FeeBase.sol\":{\"keccak256\":\"0x5e8b7ba3dc7725ae612009518980b3985bb9551c8a94525eef7a3a6e8c3933f2\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://6e73b8d31a0daf1ee0d967233786c1796c25a06b3fc2ae58f664e6c3d2a174ef\",\"dweb:/ipfs/QmX1E681qmTn1szQZQujhLFPsJBnizEHbQvWdVae4HuvcJ\"]},\"lib/openzeppelin-solc-0.6/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://526dc85e1f9b9b45830e202568d267d93dde7a4fcccf4ad7798dadcd92304d3c\",\"dweb:/ipfs/QmaoXMB972J3cSDLtBq3xBo4jLwqD2uzXTwujtSPqkYVhR\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.6.12+commit.27d51765"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"_feeManager","type":"address"},{"internalType":"enum IFeeManager.SettlementType","name":"_settlementType","type":"uint8"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"comptrollerProxy","type":"address","indexed":true},{"internalType":"uint256","name":"rate","type":"uint256","indexed":false}],"type":"event","name":"FundSettingsAdded","anonymous":false},{"inputs":[{"internalType":"address","name":"comptrollerProxy","type":"address","indexed":true},{"internalType":"address","name":"payer","type":"address","indexed":true},{"internalType":"uint256","name":"sharesQuantity","type":"uint256","indexed":false}],"type":"event","name":"Settled","anonymous":false},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"activateForFund"},{"inputs":[{"internalType":"address","name":"_comptrollerProxy","type":"address"},{"internalType":"bytes","name":"_settingsData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"addFundSettings"},{"inputs":[],"stateMutability":"view","type":"function","name":"getFeeManager","outputs":[{"internalType":"address","name":"feeManager_","type":"address"}]},{"inputs":[{"internalType":"address","name":"_comptrollerProxy","type":"address"}],"stateMutability":"view","type":"function","name":"getRateForFund","outputs":[{"internalType":"uint256","name":"rate_","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function","name":"getRecipientForFund","outputs":[{"internalType":"address","name":"recipient_","type":"address"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getSettlementType","outputs":[{"internalType":"enum IFeeManager.SettlementType","name":"settlementType_","type":"uint8"}]},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"payout","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"address","name":"_comptrollerProxy","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"enum IFeeManager.FeeHook","name":"","type":"uint8"},{"internalType":"bytes","name":"_settlementData","type":"bytes"},{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"settle","outputs":[{"internalType":"enum IFeeManager.SettlementType","name":"settlementType_","type":"uint8"},{"internalType":"address","name":"payer_","type":"address"},{"internalType":"uint256","name":"sharesDue_","type":"uint256"}]},{"inputs":[{"internalType":"enum IFeeManager.FeeHook","name":"_hook","type":"uint8"}],"stateMutability":"view","type":"function","name":"settlesOnHook","outputs":[{"internalType":"bool","name":"settles_","type":"bool"},{"internalType":"bool","name":"usesGav_","type":"bool"}]},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"enum IFeeManager.FeeHook","name":"","type":"uint8"},{"internalType":"bytes","name":"","type":"bytes"},{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"update"},{"inputs":[{"internalType":"enum IFeeManager.FeeHook","name":"","type":"uint8"}],"stateMutability":"view","type":"function","name":"updatesOnHook","outputs":[{"internalType":"bool","name":"updates_","type":"bool"},{"internalType":"bool","name":"usesGav_","type":"bool"}]}],"devdoc":{"kind":"dev","methods":{"activateForFund(address,address)":{"details":"Unimplemented by default, may be overrode."},"addFundSettings(address,bytes)":{"params":{"_comptrollerProxy":"The ComptrollerProxy of the fund","_settingsData":"Encoded settings to apply to the fee for a fund"}},"getFeeManager()":{"returns":{"feeManager_":"The `FEE_MANAGER` variable value"}},"getRateForFund(address)":{"params":{"_comptrollerProxy":"The ComptrollerProxy contract for the fund"},"returns":{"rate_":"The `rate` variable value"}},"getRecipientForFund(address)":{"details":"address(0) signifies the VaultProxy owner. Returns address(0) by default, can be overridden by fee."},"getSettlementType()":{"returns":{"settlementType_":"The `SETTLEMENT_TYPE` variable value"}},"payout(address,address)":{"details":"Returns false by default, can be overridden by fee"},"settle(address,address,uint8,bytes,uint256)":{"params":{"_comptrollerProxy":"The ComptrollerProxy of the fund","_settlementData":"Encoded args to use in calculating the settlement"},"returns":{"payer_":"The payer of shares due","settlementType_":"The type of settlement","sharesDue_":"The amount of shares due"}},"settlesOnHook(uint8)":{"params":{"_hook":"The FeeHook"},"returns":{"settles_":"True if the fee settles on the _hook","usesGav_":"True if the fee uses GAV during settle() for the _hook"}},"update(address,address,uint8,bytes,uint256)":{"details":"Unimplemented by default, can be overridden by fee"},"updatesOnHook(uint8)":{"details":"Returns false values by default, can be overridden by fee","returns":{"updates_":"True if the fee updates on the _hook","usesGav_":"True if the fee uses GAV during update() for the _hook"}}},"version":1},"userdoc":{"kind":"user","methods":{"activateForFund(address,address)":{"notice":"Allows Fee to run logic during fund activation"},"addFundSettings(address,bytes)":{"notice":"Add the initial fee settings for a fund"},"getFeeManager()":{"notice":"Gets the `FEE_MANAGER` variable"},"getRateForFund(address)":{"notice":"Gets the `rate` variable for a fund"},"getRecipientForFund(address)":{"notice":"Gets the recipient of the fee for a given fund"},"getSettlementType()":{"notice":"Gets the `SETTLEMENT_TYPE` variable"},"payout(address,address)":{"notice":"Runs payout logic for a fee that utilizes shares outstanding as its settlement type"},"settle(address,address,uint8,bytes,uint256)":{"notice":"Settles the fee"},"settlesOnHook(uint8)":{"notice":"Gets whether the fee settles and requires GAV on a particular hook"},"update(address,address,uint8,bytes,uint256)":{"notice":"Update fee state after all settlement has occurred during a given fee hook"},"updatesOnHook(uint8)":{"notice":"Gets whether the fee updates and requires GAV on a particular hook"}},"version":1}},"settings":{"remappings":["@openzeppelin/contracts/=lib/openzeppelin-solc-0.6/contracts/","@uniswap/v3-core/=lib/uniswap-v3-core/","ds-test/=lib/forge-std/lib/ds-test/src/","forge-std/=lib/forge-std/src/","openzeppelin-solc-0.6/=lib/openzeppelin-solc-0.6/contracts/","openzeppelin-solc-0.7/=lib/openzeppelin-solc-0.7/contracts/","openzeppelin-solc-0.8/=lib/openzeppelin-solc-0.8/contracts/","uniswap-v3-core-0.8/=lib/uniswap-v3-core-0.8/","uniswap-v3-core/=lib/uniswap-v3-core/","uniswap-v3-periphery-0.8/=lib/uniswap-v3-periphery-0.8/contracts/","uniswap-v3-periphery/=lib/uniswap-v3-periphery/contracts/"],"optimizer":{"runs":200,"details":{"peephole":true,"jumpdestRemover":true,"orderLiterals":true,"deduplicate":true,"cse":true,"constantOptimizer":true,"yul":false}},"metadata":{"bytecodeHash":"none"},"compilationTarget":{"contracts/release/extensions/fee-manager/fees/utils/EntranceRateFeeBase.sol":"EntranceRateFeeBase"},"evmVersion":"istanbul","libraries":{}},"sources":{"contracts/release/extensions/fee-manager/IFee.sol":{"keccak256":"0xd2f12a17ef24886db69c60448ccb17b5e091b83f759fafbd52edc57f42205249","urls":["bzz-raw://1f0248ebab4b2bef4b4f20b5a3427e9094822bcd6074c336293dd3aaa348a770","dweb:/ipfs/QmdyvS4CSGzLqQG4xyt3QNWExoVR7rPDQpLKWg1xthkhMA"],"license":"GPL-3.0"},"contracts/release/extensions/fee-manager/IFeeManager.sol":{"keccak256":"0x2935dcecc8c9d8f43335e79634e17fb5c0c7d49ed3d9c540a72e451224b7691a","urls":["bzz-raw://6d02004c1479de6e757a232adc541c88dba310a7eb73d6e6131beff04582d0ed","dweb:/ipfs/QmfCNhVodCmnmfnqhKB6xz7cHxMFMwvkRSTzHjcAu1CKvA"],"license":"GPL-3.0"},"contracts/release/extensions/fee-manager/fees/utils/EntranceRateFeeBase.sol":{"keccak256":"0xc8edb3b03b0c53e4cfb5bc4f9704c45a791e97f479cb9612c830df524444522e","urls":["bzz-raw://37cc7122b29347865dc6d231f2ec5cfa0de142b5b94838be6b76186c60bc9f00","dweb:/ipfs/QmWNF7fB7StgMnFnUyhGZN8noBnUCnbLWqLyiXNhUdf15a"],"license":"GPL-3.0"},"contracts/release/extensions/fee-manager/fees/utils/FeeBase.sol":{"keccak256":"0x5e8b7ba3dc7725ae612009518980b3985bb9551c8a94525eef7a3a6e8c3933f2","urls":["bzz-raw://6e73b8d31a0daf1ee0d967233786c1796c25a06b3fc2ae58f664e6c3d2a174ef","dweb:/ipfs/QmX1E681qmTn1szQZQujhLFPsJBnizEHbQvWdVae4HuvcJ"],"license":"GPL-3.0"},"lib/openzeppelin-solc-0.6/contracts/math/SafeMath.sol":{"keccak256":"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52","urls":["bzz-raw://526dc85e1f9b9b45830e202568d267d93dde7a4fcccf4ad7798dadcd92304d3c","dweb:/ipfs/QmaoXMB972J3cSDLtBq3xBo4jLwqD2uzXTwujtSPqkYVhR"],"license":"MIT"}},"version":1},"id":198}