{"abi":[{"type":"function","name":"allowance","inputs":[{"name":"owner","type":"address","internalType":"address"},{"name":"spender","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"approve","inputs":[{"name":"spender","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"balanceOf","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"claimRewardsFor","inputs":[{"name":"_for","type":"address","internalType":"address"}],"outputs":[{"name":"rewardTokens_","type":"address[]","internalType":"address[]"},{"name":"claimedAmounts_","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"nonpayable"},{"type":"function","name":"claimRewardsForWithoutCheckpoint","inputs":[{"name":"_for","type":"address","internalType":"address"}],"outputs":[{"name":"rewardTokens_","type":"address[]","internalType":"address[]"},{"name":"claimedAmounts_","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"nonpayable"},{"type":"function","name":"decimals","inputs":[],"outputs":[{"name":"decimals_","type":"uint8","internalType":"uint8"}],"stateMutability":"view"},{"type":"function","name":"decreaseAllowance","inputs":[{"name":"spender","type":"address","internalType":"address"},{"name":"subtractedValue","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"depositTo","inputs":[{"name":"_to","type":"address","internalType":"address"},{"name":"_amount","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"getRewardTokenAtIndex","inputs":[{"name":"_index","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"rewardToken_","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"getRewardTokenCount","inputs":[],"outputs":[{"name":"count_","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getRewardTokens","inputs":[],"outputs":[{"name":"rewardTokens_","type":"address[]","internalType":"address[]"}],"stateMutability":"view"},{"type":"function","name":"getTotalHarvestDataForRewardToken","inputs":[{"name":"_rewardToken","type":"address","internalType":"address"}],"outputs":[{"name":"totalHarvestData_","type":"tuple","internalType":"struct IStakingWrapper.TotalHarvestData","components":[{"name":"integral","type":"uint128","internalType":"uint128"},{"name":"lastCheckpointBalance","type":"uint128","internalType":"uint128"}]}],"stateMutability":"view"},{"type":"function","name":"getUserHarvestDataForRewardToken","inputs":[{"name":"_user","type":"address","internalType":"address"},{"name":"_rewardToken","type":"address","internalType":"address"}],"outputs":[{"name":"userHarvestData_","type":"tuple","internalType":"struct IStakingWrapper.UserHarvestData","components":[{"name":"integral","type":"uint128","internalType":"uint128"},{"name":"claimableReward","type":"uint128","internalType":"uint128"}]}],"stateMutability":"view"},{"type":"function","name":"increaseAllowance","inputs":[{"name":"spender","type":"address","internalType":"address"},{"name":"addedValue","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"isPaused","inputs":[],"outputs":[{"name":"isPaused_","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"name","inputs":[],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"symbol","inputs":[],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"togglePause","inputs":[{"name":"_isPaused","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"totalSupply","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"transfer","inputs":[{"name":"to","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"transferFrom","inputs":[{"name":"from","type":"address","internalType":"address"},{"name":"to","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"withdrawTo","inputs":[{"name":"_to","type":"address","internalType":"address"},{"name":"_amount","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"withdrawToOnBehalf","inputs":[{"name":"_onBehalf","type":"address","internalType":"address"},{"name":"_to","type":"address","internalType":"address"},{"name":"_amount","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"withdrawToWithoutCheckpoint","inputs":[{"name":"_to","type":"address","internalType":"address"},{"name":"_amount","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"event","name":"Approval","inputs":[{"name":"owner","type":"address","indexed":true,"internalType":"address"},{"name":"spender","type":"address","indexed":true,"internalType":"address"},{"name":"value","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"Deposited","inputs":[{"name":"from","type":"address","indexed":true,"internalType":"address"},{"name":"to","type":"address","indexed":true,"internalType":"address"},{"name":"amount","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"PauseToggled","inputs":[{"name":"isPaused","type":"bool","indexed":false,"internalType":"bool"}],"anonymous":false},{"type":"event","name":"RewardTokenAdded","inputs":[{"name":"token","type":"address","indexed":false,"internalType":"address"}],"anonymous":false},{"type":"event","name":"TotalHarvestIntegralUpdated","inputs":[{"name":"rewardToken","type":"address","indexed":true,"internalType":"address"},{"name":"integral","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"TotalHarvestLastCheckpointBalanceUpdated","inputs":[{"name":"rewardToken","type":"address","indexed":true,"internalType":"address"},{"name":"lastCheckpointBalance","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"Transfer","inputs":[{"name":"from","type":"address","indexed":true,"internalType":"address"},{"name":"to","type":"address","indexed":true,"internalType":"address"},{"name":"value","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"UserHarvestUpdated","inputs":[{"name":"user","type":"address","indexed":true,"internalType":"address"},{"name":"rewardToken","type":"address","indexed":true,"internalType":"address"},{"name":"integral","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"claimableReward","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"Withdrawn","inputs":[{"name":"caller","type":"address","indexed":true,"internalType":"address"},{"name":"from","type":"address","indexed":true,"internalType":"address"},{"name":"to","type":"address","indexed":true,"internalType":"address"},{"name":"amount","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","claimRewardsFor(address)":"1ac6d19d","claimRewardsForWithoutCheckpoint(address)":"4c6cb622","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","depositTo(address,uint256)":"ffaad6a5","getRewardTokenAtIndex(uint256)":"a7d2793f","getRewardTokenCount()":"82e5d073","getRewardTokens()":"c4f59f9b","getTotalHarvestDataForRewardToken(address)":"9655dd61","getUserHarvestDataForRewardToken(address,address)":"093f6365","increaseAllowance(address,uint256)":"39509351","isPaused()":"b187bd26","name()":"06fdde03","symbol()":"95d89b41","togglePause(bool)":"57d159c6","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","withdrawTo(address,uint256)":"205c2878","withdrawToOnBehalf(address,address,uint256)":"7efe7210","withdrawToWithoutCheckpoint(address,uint256)":"2251ab5e"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isPaused\",\"type\":\"bool\"}],\"name\":\"PauseToggled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"RewardTokenAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"rewardToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"integral\",\"type\":\"uint256\"}],\"name\":\"TotalHarvestIntegralUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"rewardToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lastCheckpointBalance\",\"type\":\"uint256\"}],\"name\":\"TotalHarvestLastCheckpointBalanceUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"rewardToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"integral\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"claimableReward\",\"type\":\"uint256\"}],\"name\":\"UserHarvestUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_for\",\"type\":\"address\"}],\"name\":\"claimRewardsFor\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"rewardTokens_\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"claimedAmounts_\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_for\",\"type\":\"address\"}],\"name\":\"claimRewardsForWithoutCheckpoint\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"rewardTokens_\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"claimedAmounts_\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"decimals_\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"depositTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"getRewardTokenAtIndex\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"rewardToken_\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRewardTokenCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"count_\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRewardTokens\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"rewardTokens_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_rewardToken\",\"type\":\"address\"}],\"name\":\"getTotalHarvestDataForRewardToken\",\"outputs\":[{\"components\":[{\"internalType\":\"uint128\",\"name\":\"integral\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"lastCheckpointBalance\",\"type\":\"uint128\"}],\"internalType\":\"struct IStakingWrapper.TotalHarvestData\",\"name\":\"totalHarvestData_\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_rewardToken\",\"type\":\"address\"}],\"name\":\"getUserHarvestDataForRewardToken\",\"outputs\":[{\"components\":[{\"internalType\":\"uint128\",\"name\":\"integral\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"claimableReward\",\"type\":\"uint128\"}],\"internalType\":\"struct IStakingWrapper.UserHarvestData\",\"name\":\"userHarvestData_\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isPaused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isPaused_\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_isPaused\",\"type\":\"bool\"}],\"name\":\"togglePause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_onBehalf\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawToOnBehalf\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawToWithoutCheckpoint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Enzyme Council <security@enzyme.finance>\",\"details\":\"Can be used as a base for both standard deployments and proxy targets\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"claimRewardsFor(address)\":{\"details\":\"Can be called off-chain to simulate the total harvestable rewards for a particular user\",\"params\":{\"_for\":\"The account for which to claim rewards\"},\"returns\":{\"claimedAmounts_\":\"The reward token amounts claimed\",\"rewardTokens_\":\"The reward tokens\"}},\"claimRewardsForWithoutCheckpoint(address)\":{\"details\":\"Can be called off-chain to simulate the total harvestable rewards for a particular user. Does NOT give up claim to rewards accrued since the last checkpoint.\",\"params\":{\"_for\":\"The account for which to claim rewards\"},\"returns\":{\"claimedAmounts_\":\"The reward token amounts claimed\",\"rewardTokens_\":\"The reward tokens\"}},\"decimals()\":{\"details\":\"Implementing contracts should override to set different decimals\",\"returns\":{\"decimals_\":\"The token decimals\"}},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"depositTo(address,uint256)\":{\"params\":{\"_amount\":\"The amount of tokens to deposit\",\"_to\":\"The account to receive staking tokens\"}},\"getRewardTokenAtIndex(uint256)\":{\"returns\":{\"rewardToken_\":\"The reward token address\"}},\"getRewardTokenCount()\":{\"returns\":{\"count_\":\"The count\"}},\"getRewardTokens()\":{\"returns\":{\"rewardTokens_\":\"The reward tokens\"}},\"getTotalHarvestDataForRewardToken(address)\":{\"params\":{\"_rewardToken\":\"The reward token\"},\"returns\":{\"totalHarvestData_\":\"The TotalHarvestData\"}},\"getUserHarvestDataForRewardToken(address,address)\":{\"params\":{\"_rewardToken\":\"The reward token\",\"_user\":\"The account\"},\"returns\":{\"userHarvestData_\":\"The UserHarvestData\"}},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"isPaused()\":{\"returns\":{\"isPaused_\":\"True if paused\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"togglePause(bool)\":{\"params\":{\"_isPaused\":\"True if next state is paused, false if unpaused\"}},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"},\"withdrawTo(address,uint256)\":{\"params\":{\"_amount\":\"The amount of tokens to withdraw\",\"_to\":\"The account to receive tokens\"}},\"withdrawToOnBehalf(address,address,uint256)\":{\"details\":\"The caller must have an adequate ERC20.allowance() for _onBehalf\",\"params\":{\"_amount\":\"The amount of tokens to withdraw\",\"_onBehalf\":\"The account on behalf to withdraw\",\"_to\":\"The account to receive tokens\"}},\"withdrawToWithoutCheckpoint(address,uint256)\":{\"details\":\"Simply runs withdrawal logic without checkpointing rewards, in case of rewards-related failure. Redeemer can still claim rewards accrued up to the previous checkpoint.\",\"params\":{\"_amount\":\"The amount of tokens to withdraw\",\"_to\":\"The account to receive tokens\"}}},\"title\":\"StakingWrapperBase Contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"claimRewardsFor(address)\":{\"notice\":\"Claims all rewards for a given account, including any accrued since the last checkpoint\"},\"claimRewardsForWithoutCheckpoint(address)\":{\"notice\":\"Claims all rewards for a given account, not including any accrued since the last checkpoint\"},\"decimals()\":{\"notice\":\"Gets the token decimals\"},\"depositTo(address,uint256)\":{\"notice\":\"Deposits tokens to be staked, minting staking token to a specified account\"},\"getRewardTokenAtIndex(uint256)\":{\"notice\":\"Gets the reward token at a particular index\"},\"getRewardTokenCount()\":{\"notice\":\"Gets the count of reward tokens being harvested\"},\"getRewardTokens()\":{\"notice\":\"Gets all reward tokens being harvested\"},\"getTotalHarvestDataForRewardToken(address)\":{\"notice\":\"Gets the TotalHarvestData for a specified reward token\"},\"getUserHarvestDataForRewardToken(address,address)\":{\"notice\":\"Gets the UserHarvestData for a specified account and reward token\"},\"isPaused()\":{\"notice\":\"Checks if deposits and new reward harvesting are paused\"},\"togglePause(bool)\":{\"notice\":\"Toggles pause for deposits\"},\"withdrawTo(address,uint256)\":{\"notice\":\"Withdraws staked tokens, returning tokens to a specified account\"},\"withdrawToOnBehalf(address,address,uint256)\":{\"notice\":\"Withdraws staked tokens on behalf of AccountA, returning tokens to a specified AccountB\"},\"withdrawToWithoutCheckpoint(address,uint256)\":{\"notice\":\"Withdraws staked tokens, returning tokens to a specified account, but giving up any rewards accrued since the previous checkpoint\"}},\"notice\":\"A base contract for staking wrappers\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/persistent/staking-wrappers/StakingWrapperBase.sol\":\"StakingWrapperBase\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"appendCBOR\":false,\"bytecodeHash\":\"none\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":false},\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-solc-0.6/contracts/\",\":@uniswap/v3-core/=lib/uniswap-v3-core/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-solc-0.6/=lib/openzeppelin-solc-0.6/contracts/\",\":openzeppelin-solc-0.7/=lib/openzeppelin-solc-0.7/contracts/\",\":openzeppelin-solc-0.8/=lib/openzeppelin-solc-0.8/contracts/\",\":uniswap-v3-core-0.8/=lib/uniswap-v3-core-0.8/\",\":uniswap-v3-core/=lib/uniswap-v3-core/\",\":uniswap-v3-periphery-0.8/=lib/uniswap-v3-periphery-0.8/contracts/\",\":uniswap-v3-periphery/=lib/uniswap-v3-periphery/contracts/\"]},\"sources\":{\"contracts/persistent/staking-wrappers/IStakingWrapper.sol\":{\"keccak256\":\"0xf6d5b81db160ae268bab9a5105aa832f79aeb15e0a05f979c8ba319a54b4627f\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://81253e01cd72e90d3be4e297eb70c401c9bb05a01ba7bcde59ece1ea07415e60\",\"dweb:/ipfs/QmTMq9yypb8ZnpLGkLnbrRKrZAEKgS9zjF38D8jCM3TaVz\"]},\"contracts/persistent/staking-wrappers/StakingWrapperBase.sol\":{\"keccak256\":\"0x27cc674fefbf0975d7a65a2e4d239c6d92cb3343730db491d97a47c012db8f78\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://5d3f9d8b41c67b19e99dc309f0d1a7df2271267192e4359a5875707375575d51\",\"dweb:/ipfs/QmQJF66CiFwRAGMmsqpXnJQH2zURobXBhZTvho3EVUsspB\"]},\"contracts/utils/0.8.19/AddressArrayLib.sol\":{\"keccak256\":\"0x7d626e9d491ec57a48f3d004cfaeb6d19af1b177c7b699e66b4ece74119e871f\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://f3b316cc800981668205d4ca445728138410e42bd52ca782aa0c43a5cf1f4acd\",\"dweb:/ipfs/QmQZioqJ3qFUxgcosif32m6m3VNbX5pravfTjaf9e9UCiH\"]},\"lib/openzeppelin-solc-0.8/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x190dd6f8d592b7e4e930feb7f4313aeb8e1c4ad3154c27ce1cf6a512fc30d8cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ce8dfb62d0c4fa260d6eec8f1cd47f5f2a044e11bde5b31d18072fa6e7d9010\",\"dweb:/ipfs/QmTyFztU3tLEcEDnqqiaW4UJetqsU77LXc6pjc9oTXCK5u\"]},\"lib/openzeppelin-solc-0.8/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15f52f51413a9de1ff191e2f6367c62178e1df7806d7880fe857a98b0b66253d\",\"dweb:/ipfs/QmaQG1fwfgUt5E9nu2cccFiV47B2V78MM1tCy1qB7n4MsH\"]},\"lib/openzeppelin-solc-0.8/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"lib/openzeppelin-solc-0.8/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"lib/openzeppelin-solc-0.8/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"lib/openzeppelin-solc-0.8/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5a7b96e511be78d5cdf635c784e6ab8cdd38625bb8cafb8a80914a1c89cf0f6\",\"dweb:/ipfs/QmVzTCwJxQAkjRQHboT5QrvsVJGWQHgfEjeTbvyxoKBrds\"]},\"lib/openzeppelin-solc-0.8/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"lib/openzeppelin-solc-0.8/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.19+commit.7dd6d404"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address","indexed":true},{"internalType":"address","name":"spender","type":"address","indexed":true},{"internalType":"uint256","name":"value","type":"uint256","indexed":false}],"type":"event","name":"Approval","anonymous":false},{"inputs":[{"internalType":"address","name":"from","type":"address","indexed":true},{"internalType":"address","name":"to","type":"address","indexed":true},{"internalType":"uint256","name":"amount","type":"uint256","indexed":false}],"type":"event","name":"Deposited","anonymous":false},{"inputs":[{"internalType":"bool","name":"isPaused","type":"bool","indexed":false}],"type":"event","name":"PauseToggled","anonymous":false},{"inputs":[{"internalType":"address","name":"token","type":"address","indexed":false}],"type":"event","name":"RewardTokenAdded","anonymous":false},{"inputs":[{"internalType":"address","name":"rewardToken","type":"address","indexed":true},{"internalType":"uint256","name":"integral","type":"uint256","indexed":false}],"type":"event","name":"TotalHarvestIntegralUpdated","anonymous":false},{"inputs":[{"internalType":"address","name":"rewardToken","type":"address","indexed":true},{"internalType":"uint256","name":"lastCheckpointBalance","type":"uint256","indexed":false}],"type":"event","name":"TotalHarvestLastCheckpointBalanceUpdated","anonymous":false},{"inputs":[{"internalType":"address","name":"from","type":"address","indexed":true},{"internalType":"address","name":"to","type":"address","indexed":true},{"internalType":"uint256","name":"value","type":"uint256","indexed":false}],"type":"event","name":"Transfer","anonymous":false},{"inputs":[{"internalType":"address","name":"user","type":"address","indexed":true},{"internalType":"address","name":"rewardToken","type":"address","indexed":true},{"internalType":"uint256","name":"integral","type":"uint256","indexed":false},{"internalType":"uint256","name":"claimableReward","type":"uint256","indexed":false}],"type":"event","name":"UserHarvestUpdated","anonymous":false},{"inputs":[{"internalType":"address","name":"caller","type":"address","indexed":true},{"internalType":"address","name":"from","type":"address","indexed":true},{"internalType":"address","name":"to","type":"address","indexed":true},{"internalType":"uint256","name":"amount","type":"uint256","indexed":false}],"type":"event","name":"Withdrawn","anonymous":false},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"stateMutability":"view","type":"function","name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"view","type":"function","name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"_for","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"claimRewardsFor","outputs":[{"internalType":"address[]","name":"rewardTokens_","type":"address[]"},{"internalType":"uint256[]","name":"claimedAmounts_","type":"uint256[]"}]},{"inputs":[{"internalType":"address","name":"_for","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"claimRewardsForWithoutCheckpoint","outputs":[{"internalType":"address[]","name":"rewardTokens_","type":"address[]"},{"internalType":"uint256[]","name":"claimedAmounts_","type":"uint256[]"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"decimals","outputs":[{"internalType":"uint8","name":"decimals_","type":"uint8"}]},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"depositTo"},{"inputs":[{"internalType":"uint256","name":"_index","type":"uint256"}],"stateMutability":"view","type":"function","name":"getRewardTokenAtIndex","outputs":[{"internalType":"address","name":"rewardToken_","type":"address"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getRewardTokenCount","outputs":[{"internalType":"uint256","name":"count_","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getRewardTokens","outputs":[{"internalType":"address[]","name":"rewardTokens_","type":"address[]"}]},{"inputs":[{"internalType":"address","name":"_rewardToken","type":"address"}],"stateMutability":"view","type":"function","name":"getTotalHarvestDataForRewardToken","outputs":[{"internalType":"struct IStakingWrapper.TotalHarvestData","name":"totalHarvestData_","type":"tuple","components":[{"internalType":"uint128","name":"integral","type":"uint128"},{"internalType":"uint128","name":"lastCheckpointBalance","type":"uint128"}]}]},{"inputs":[{"internalType":"address","name":"_user","type":"address"},{"internalType":"address","name":"_rewardToken","type":"address"}],"stateMutability":"view","type":"function","name":"getUserHarvestDataForRewardToken","outputs":[{"internalType":"struct IStakingWrapper.UserHarvestData","name":"userHarvestData_","type":"tuple","components":[{"internalType":"uint128","name":"integral","type":"uint128"},{"internalType":"uint128","name":"claimableReward","type":"uint128"}]}]},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"isPaused","outputs":[{"internalType":"bool","name":"isPaused_","type":"bool"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"name","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"bool","name":"_isPaused","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"togglePause"},{"inputs":[],"stateMutability":"view","type":"function","name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"withdrawTo"},{"inputs":[{"internalType":"address","name":"_onBehalf","type":"address"},{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"withdrawToOnBehalf"},{"inputs":[{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"withdrawToWithoutCheckpoint"}],"devdoc":{"kind":"dev","methods":{"allowance(address,address)":{"details":"See {IERC20-allowance}."},"approve(address,uint256)":{"details":"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{"details":"See {IERC20-balanceOf}."},"claimRewardsFor(address)":{"details":"Can be called off-chain to simulate the total harvestable rewards for a particular user","params":{"_for":"The account for which to claim rewards"},"returns":{"claimedAmounts_":"The reward token amounts claimed","rewardTokens_":"The reward tokens"}},"claimRewardsForWithoutCheckpoint(address)":{"details":"Can be called off-chain to simulate the total harvestable rewards for a particular user. Does NOT give up claim to rewards accrued since the last checkpoint.","params":{"_for":"The account for which to claim rewards"},"returns":{"claimedAmounts_":"The reward token amounts claimed","rewardTokens_":"The reward tokens"}},"decimals()":{"details":"Implementing contracts should override to set different decimals","returns":{"decimals_":"The token decimals"}},"decreaseAllowance(address,uint256)":{"details":"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."},"depositTo(address,uint256)":{"params":{"_amount":"The amount of tokens to deposit","_to":"The account to receive staking tokens"}},"getRewardTokenAtIndex(uint256)":{"returns":{"rewardToken_":"The reward token address"}},"getRewardTokenCount()":{"returns":{"count_":"The count"}},"getRewardTokens()":{"returns":{"rewardTokens_":"The reward tokens"}},"getTotalHarvestDataForRewardToken(address)":{"params":{"_rewardToken":"The reward token"},"returns":{"totalHarvestData_":"The TotalHarvestData"}},"getUserHarvestDataForRewardToken(address,address)":{"params":{"_rewardToken":"The reward token","_user":"The account"},"returns":{"userHarvestData_":"The UserHarvestData"}},"increaseAllowance(address,uint256)":{"details":"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."},"isPaused()":{"returns":{"isPaused_":"True if paused"}},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token, usually a shorter version of the name."},"togglePause(bool)":{"params":{"_isPaused":"True if next state is paused, false if unpaused"}},"totalSupply()":{"details":"See {IERC20-totalSupply}."},"transfer(address,uint256)":{"details":"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."},"transferFrom(address,address,uint256)":{"details":"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."},"withdrawTo(address,uint256)":{"params":{"_amount":"The amount of tokens to withdraw","_to":"The account to receive tokens"}},"withdrawToOnBehalf(address,address,uint256)":{"details":"The caller must have an adequate ERC20.allowance() for _onBehalf","params":{"_amount":"The amount of tokens to withdraw","_onBehalf":"The account on behalf to withdraw","_to":"The account to receive tokens"}},"withdrawToWithoutCheckpoint(address,uint256)":{"details":"Simply runs withdrawal logic without checkpointing rewards, in case of rewards-related failure. Redeemer can still claim rewards accrued up to the previous checkpoint.","params":{"_amount":"The amount of tokens to withdraw","_to":"The account to receive tokens"}}},"version":1},"userdoc":{"kind":"user","methods":{"claimRewardsFor(address)":{"notice":"Claims all rewards for a given account, including any accrued since the last checkpoint"},"claimRewardsForWithoutCheckpoint(address)":{"notice":"Claims all rewards for a given account, not including any accrued since the last checkpoint"},"decimals()":{"notice":"Gets the token decimals"},"depositTo(address,uint256)":{"notice":"Deposits tokens to be staked, minting staking token to a specified account"},"getRewardTokenAtIndex(uint256)":{"notice":"Gets the reward token at a particular index"},"getRewardTokenCount()":{"notice":"Gets the count of reward tokens being harvested"},"getRewardTokens()":{"notice":"Gets all reward tokens being harvested"},"getTotalHarvestDataForRewardToken(address)":{"notice":"Gets the TotalHarvestData for a specified reward token"},"getUserHarvestDataForRewardToken(address,address)":{"notice":"Gets the UserHarvestData for a specified account and reward token"},"isPaused()":{"notice":"Checks if deposits and new reward harvesting are paused"},"togglePause(bool)":{"notice":"Toggles pause for deposits"},"withdrawTo(address,uint256)":{"notice":"Withdraws staked tokens, returning tokens to a specified account"},"withdrawToOnBehalf(address,address,uint256)":{"notice":"Withdraws staked tokens on behalf of AccountA, returning tokens to a specified AccountB"},"withdrawToWithoutCheckpoint(address,uint256)":{"notice":"Withdraws staked tokens, returning tokens to a specified account, but giving up any rewards accrued since the previous checkpoint"}},"version":1}},"settings":{"remappings":["@openzeppelin/contracts/=lib/openzeppelin-solc-0.6/contracts/","@uniswap/v3-core/=lib/uniswap-v3-core/","ds-test/=lib/forge-std/lib/ds-test/src/","forge-std/=lib/forge-std/src/","openzeppelin-solc-0.6/=lib/openzeppelin-solc-0.6/contracts/","openzeppelin-solc-0.7/=lib/openzeppelin-solc-0.7/contracts/","openzeppelin-solc-0.8/=lib/openzeppelin-solc-0.8/contracts/","uniswap-v3-core-0.8/=lib/uniswap-v3-core-0.8/","uniswap-v3-core/=lib/uniswap-v3-core/","uniswap-v3-periphery-0.8/=lib/uniswap-v3-periphery-0.8/contracts/","uniswap-v3-periphery/=lib/uniswap-v3-periphery/contracts/"],"optimizer":{"runs":200,"details":{"peephole":true,"inliner":true,"jumpdestRemover":true,"orderLiterals":true,"deduplicate":true,"cse":true,"constantOptimizer":true,"yul":false}},"metadata":{"bytecodeHash":"none","appendCBOR":false},"compilationTarget":{"contracts/persistent/staking-wrappers/StakingWrapperBase.sol":"StakingWrapperBase"},"evmVersion":"paris","libraries":{}},"sources":{"contracts/persistent/staking-wrappers/IStakingWrapper.sol":{"keccak256":"0xf6d5b81db160ae268bab9a5105aa832f79aeb15e0a05f979c8ba319a54b4627f","urls":["bzz-raw://81253e01cd72e90d3be4e297eb70c401c9bb05a01ba7bcde59ece1ea07415e60","dweb:/ipfs/QmTMq9yypb8ZnpLGkLnbrRKrZAEKgS9zjF38D8jCM3TaVz"],"license":"GPL-3.0"},"contracts/persistent/staking-wrappers/StakingWrapperBase.sol":{"keccak256":"0x27cc674fefbf0975d7a65a2e4d239c6d92cb3343730db491d97a47c012db8f78","urls":["bzz-raw://5d3f9d8b41c67b19e99dc309f0d1a7df2271267192e4359a5875707375575d51","dweb:/ipfs/QmQJF66CiFwRAGMmsqpXnJQH2zURobXBhZTvho3EVUsspB"],"license":"GPL-3.0"},"contracts/utils/0.8.19/AddressArrayLib.sol":{"keccak256":"0x7d626e9d491ec57a48f3d004cfaeb6d19af1b177c7b699e66b4ece74119e871f","urls":["bzz-raw://f3b316cc800981668205d4ca445728138410e42bd52ca782aa0c43a5cf1f4acd","dweb:/ipfs/QmQZioqJ3qFUxgcosif32m6m3VNbX5pravfTjaf9e9UCiH"],"license":"GPL-3.0"},"lib/openzeppelin-solc-0.8/contracts/security/ReentrancyGuard.sol":{"keccak256":"0x190dd6f8d592b7e4e930feb7f4313aeb8e1c4ad3154c27ce1cf6a512fc30d8cc","urls":["bzz-raw://4ce8dfb62d0c4fa260d6eec8f1cd47f5f2a044e11bde5b31d18072fa6e7d9010","dweb:/ipfs/QmTyFztU3tLEcEDnqqiaW4UJetqsU77LXc6pjc9oTXCK5u"],"license":"MIT"},"lib/openzeppelin-solc-0.8/contracts/token/ERC20/ERC20.sol":{"keccak256":"0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d","urls":["bzz-raw://15f52f51413a9de1ff191e2f6367c62178e1df7806d7880fe857a98b0b66253d","dweb:/ipfs/QmaQG1fwfgUt5E9nu2cccFiV47B2V78MM1tCy1qB7n4MsH"],"license":"MIT"},"lib/openzeppelin-solc-0.8/contracts/token/ERC20/IERC20.sol":{"keccak256":"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b","urls":["bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34","dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"],"license":"MIT"},"lib/openzeppelin-solc-0.8/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"keccak256":"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca","urls":["bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd","dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"],"license":"MIT"},"lib/openzeppelin-solc-0.8/contracts/token/ERC20/extensions/draft-IERC20Permit.sol":{"keccak256":"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329","urls":["bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95","dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7"],"license":"MIT"},"lib/openzeppelin-solc-0.8/contracts/token/ERC20/utils/SafeERC20.sol":{"keccak256":"0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238","urls":["bzz-raw://f5a7b96e511be78d5cdf635c784e6ab8cdd38625bb8cafb8a80914a1c89cf0f6","dweb:/ipfs/QmVzTCwJxQAkjRQHboT5QrvsVJGWQHgfEjeTbvyxoKBrds"],"license":"MIT"},"lib/openzeppelin-solc-0.8/contracts/utils/Address.sol":{"keccak256":"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1","urls":["bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269","dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj"],"license":"MIT"},"lib/openzeppelin-solc-0.8/contracts/utils/Context.sol":{"keccak256":"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7","urls":["bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92","dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"],"license":"MIT"}},"version":1},"id":27}