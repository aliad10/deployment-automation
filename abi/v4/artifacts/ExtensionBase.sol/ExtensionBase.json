{"abi":[{"type":"constructor","inputs":[{"name":"_fundDeployer","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"activateForFund","inputs":[{"name":"","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"deactivateForFund","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"getFundDeployer","inputs":[],"outputs":[{"name":"fundDeployer_","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"getOwner","inputs":[],"outputs":[{"name":"owner_","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"getVaultProxyForFund","inputs":[{"name":"_comptrollerProxy","type":"address","internalType":"address"}],"outputs":[{"name":"vaultProxy_","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"receiveCallFromComptroller","inputs":[{"name":"","type":"address","internalType":"address"},{"name":"","type":"uint256","internalType":"uint256"},{"name":"","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setConfigForFund","inputs":[{"name":"","type":"address","internalType":"address"},{"name":"","type":"address","internalType":"address"},{"name":"","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"event","name":"ValidatedVaultProxySetForFund","inputs":[{"name":"comptrollerProxy","type":"address","indexed":true,"internalType":"address"},{"name":"vaultProxy","type":"address","indexed":true,"internalType":"address"}],"anonymous":false}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"activateForFund(bool)":"80d57063","deactivateForFund()":"bd8e959a","getFundDeployer()":"97c0ac87","getOwner()":"893d20e8","getVaultProxyForFund(address)":"46790346","receiveCallFromComptroller(address,uint256,bytes)":"1bee801e","setConfigForFund(address,address,bytes)":"f067cc11"},"rawMetadata":"{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_fundDeployer\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"comptrollerProxy\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"vaultProxy\",\"type\":\"address\"}],\"name\":\"ValidatedVaultProxySetForFund\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"name\":\"activateForFund\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deactivateForFund\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFundDeployer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"fundDeployer_\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner_\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_comptrollerProxy\",\"type\":\"address\"}],\"name\":\"getVaultProxyForFund\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"vaultProxy_\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"receiveCallFromComptroller\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"setConfigForFund\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Enzyme Council <security@enzyme.finance>\",\"kind\":\"dev\",\"methods\":{\"activateForFund(bool)\":{\"details\":\"Unimplemented by default, may be overridden.\"},\"deactivateForFund()\":{\"details\":\"Unimplemented by default, may be overridden.\"},\"getFundDeployer()\":{\"returns\":{\"fundDeployer_\":\"The `FUND_DEPLOYER` variable value\"}},\"getOwner()\":{\"details\":\"Ownership is deferred to the owner of the FundDeployer contract\",\"returns\":{\"owner_\":\"The owner\"}},\"getVaultProxyForFund(address)\":{\"params\":{\"_comptrollerProxy\":\"The ComptrollerProxy of the fund\"},\"returns\":{\"vaultProxy_\":\"The VaultProxy of the fund\"}},\"receiveCallFromComptroller(address,uint256,bytes)\":{\"details\":\"Unimplemented by default, may be overridden.\"},\"setConfigForFund(address,address,bytes)\":{\"details\":\"Unimplemented by default, may be overridden.\"}},\"title\":\"ExtensionBase Contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"activateForFund(bool)\":{\"notice\":\"Allows extension to run logic during fund activation\"},\"deactivateForFund()\":{\"notice\":\"Allows extension to run logic during fund deactivation (destruct)\"},\"getFundDeployer()\":{\"notice\":\"Gets the `FUND_DEPLOYER` variable\"},\"getOwner()\":{\"notice\":\"Gets the owner of this contract\"},\"getVaultProxyForFund(address)\":{\"notice\":\"Gets the verified VaultProxy for a given ComptrollerProxy\"},\"receiveCallFromComptroller(address,uint256,bytes)\":{\"notice\":\"Receives calls from ComptrollerLib.callOnExtension() and dispatches the appropriate action\"},\"setConfigForFund(address,address,bytes)\":{\"notice\":\"Allows extension to run logic during fund configuration\"}},\"notice\":\"Base class for an extension\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/release/extensions/utils/ExtensionBase.sol\":\"ExtensionBase\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-solc-0.6/contracts/\",\":@uniswap/v3-core/=lib/uniswap-v3-core/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-solc-0.6/=lib/openzeppelin-solc-0.6/contracts/\",\":openzeppelin-solc-0.7/=lib/openzeppelin-solc-0.7/contracts/\",\":openzeppelin-solc-0.8/=lib/openzeppelin-solc-0.8/contracts/\",\":uniswap-v3-core-0.8/=lib/uniswap-v3-core-0.8/\",\":uniswap-v3-core/=lib/uniswap-v3-core/\",\":uniswap-v3-periphery-0.8/=lib/uniswap-v3-periphery-0.8/contracts/\",\":uniswap-v3-periphery/=lib/uniswap-v3-periphery/contracts/\"]},\"sources\":{\"contracts/release/core/fund-deployer/IFundDeployer.sol\":{\"keccak256\":\"0xf960a9f25dc1f64fc5e690c93e43afd57c7ce90575e1adda40b8444994f7074d\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://509d00c03489c1ee57db5912c37471bcedfbd6d7b6d9845e434852920a954549\",\"dweb:/ipfs/QmQahvKwys3uHEk9J3N8pWfh4SPMTxdKHDVHdbff7fpmKu\"]},\"contracts/release/extensions/IExtension.sol\":{\"keccak256\":\"0x2bc19e20fe29d99538ea647ccbb47390a9871b8c934642f8dae266373b3d64a7\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://27223d011ef45d2005b04bbf91be5b1251cfc096180a5155635b21f4e7ab618d\",\"dweb:/ipfs/QmXQ4sQAw77TgiCjWvBzK26tseTB7k2vEYdop2BtxBxqhV\"]},\"contracts/release/extensions/utils/ExtensionBase.sol\":{\"keccak256\":\"0xbc89e682912de6c3c69d0b5c6913ddfa34629274175c5a123b1378277bcb7cdc\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://eeeae90f4f9318f823897e3aa334ffbfdbb70e4e1997c8405a311fcedc5f8b7d\",\"dweb:/ipfs/QmSBNChwFXcR5V9JWVBJDnrzx8SsaKaySkkgjcGe7B1ZqR\"]},\"contracts/release/utils/0.6.12/FundDeployerOwnerMixin.sol\":{\"keccak256\":\"0x09bc6ded873a4fdd168d2e37abb98e310b3757629e61c1d890609165ba3f3ab6\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://e03add714e3810a874e1b07008be4d21b2d6d74f9cabe93844f9c88680bac753\",\"dweb:/ipfs/QmXXn62B2RRUjPxdwsAdj8dCBEvmCafYvFxKV8c9LvcV2d\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.6.12+commit.27d51765"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"_fundDeployer","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"comptrollerProxy","type":"address","indexed":true},{"internalType":"address","name":"vaultProxy","type":"address","indexed":true}],"type":"event","name":"ValidatedVaultProxySetForFund","anonymous":false},{"inputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"activateForFund"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"deactivateForFund"},{"inputs":[],"stateMutability":"view","type":"function","name":"getFundDeployer","outputs":[{"internalType":"address","name":"fundDeployer_","type":"address"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getOwner","outputs":[{"internalType":"address","name":"owner_","type":"address"}]},{"inputs":[{"internalType":"address","name":"_comptrollerProxy","type":"address"}],"stateMutability":"view","type":"function","name":"getVaultProxyForFund","outputs":[{"internalType":"address","name":"vaultProxy_","type":"address"}]},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"receiveCallFromComptroller"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"setConfigForFund"}],"devdoc":{"kind":"dev","methods":{"activateForFund(bool)":{"details":"Unimplemented by default, may be overridden."},"deactivateForFund()":{"details":"Unimplemented by default, may be overridden."},"getFundDeployer()":{"returns":{"fundDeployer_":"The `FUND_DEPLOYER` variable value"}},"getOwner()":{"details":"Ownership is deferred to the owner of the FundDeployer contract","returns":{"owner_":"The owner"}},"getVaultProxyForFund(address)":{"params":{"_comptrollerProxy":"The ComptrollerProxy of the fund"},"returns":{"vaultProxy_":"The VaultProxy of the fund"}},"receiveCallFromComptroller(address,uint256,bytes)":{"details":"Unimplemented by default, may be overridden."},"setConfigForFund(address,address,bytes)":{"details":"Unimplemented by default, may be overridden."}},"version":1},"userdoc":{"kind":"user","methods":{"activateForFund(bool)":{"notice":"Allows extension to run logic during fund activation"},"deactivateForFund()":{"notice":"Allows extension to run logic during fund deactivation (destruct)"},"getFundDeployer()":{"notice":"Gets the `FUND_DEPLOYER` variable"},"getOwner()":{"notice":"Gets the owner of this contract"},"getVaultProxyForFund(address)":{"notice":"Gets the verified VaultProxy for a given ComptrollerProxy"},"receiveCallFromComptroller(address,uint256,bytes)":{"notice":"Receives calls from ComptrollerLib.callOnExtension() and dispatches the appropriate action"},"setConfigForFund(address,address,bytes)":{"notice":"Allows extension to run logic during fund configuration"}},"version":1}},"settings":{"remappings":["@openzeppelin/contracts/=lib/openzeppelin-solc-0.6/contracts/","@uniswap/v3-core/=lib/uniswap-v3-core/","ds-test/=lib/forge-std/lib/ds-test/src/","forge-std/=lib/forge-std/src/","openzeppelin-solc-0.6/=lib/openzeppelin-solc-0.6/contracts/","openzeppelin-solc-0.7/=lib/openzeppelin-solc-0.7/contracts/","openzeppelin-solc-0.8/=lib/openzeppelin-solc-0.8/contracts/","uniswap-v3-core-0.8/=lib/uniswap-v3-core-0.8/","uniswap-v3-core/=lib/uniswap-v3-core/","uniswap-v3-periphery-0.8/=lib/uniswap-v3-periphery-0.8/contracts/","uniswap-v3-periphery/=lib/uniswap-v3-periphery/contracts/"],"optimizer":{"enabled":false,"runs":200},"metadata":{"bytecodeHash":"none"},"compilationTarget":{"contracts/release/extensions/utils/ExtensionBase.sol":"ExtensionBase"},"evmVersion":"istanbul","libraries":{}},"sources":{"contracts/release/core/fund-deployer/IFundDeployer.sol":{"keccak256":"0xf960a9f25dc1f64fc5e690c93e43afd57c7ce90575e1adda40b8444994f7074d","urls":["bzz-raw://509d00c03489c1ee57db5912c37471bcedfbd6d7b6d9845e434852920a954549","dweb:/ipfs/QmQahvKwys3uHEk9J3N8pWfh4SPMTxdKHDVHdbff7fpmKu"],"license":"GPL-3.0"},"contracts/release/extensions/IExtension.sol":{"keccak256":"0x2bc19e20fe29d99538ea647ccbb47390a9871b8c934642f8dae266373b3d64a7","urls":["bzz-raw://27223d011ef45d2005b04bbf91be5b1251cfc096180a5155635b21f4e7ab618d","dweb:/ipfs/QmXQ4sQAw77TgiCjWvBzK26tseTB7k2vEYdop2BtxBxqhV"],"license":"GPL-3.0"},"contracts/release/extensions/utils/ExtensionBase.sol":{"keccak256":"0xbc89e682912de6c3c69d0b5c6913ddfa34629274175c5a123b1378277bcb7cdc","urls":["bzz-raw://eeeae90f4f9318f823897e3aa334ffbfdbb70e4e1997c8405a311fcedc5f8b7d","dweb:/ipfs/QmSBNChwFXcR5V9JWVBJDnrzx8SsaKaySkkgjcGe7B1ZqR"],"license":"GPL-3.0"},"contracts/release/utils/0.6.12/FundDeployerOwnerMixin.sol":{"keccak256":"0x09bc6ded873a4fdd168d2e37abb98e310b3757629e61c1d890609165ba3f3ab6","urls":["bzz-raw://e03add714e3810a874e1b07008be4d21b2d6d74f9cabe93844f9c88680bac753","dweb:/ipfs/QmXXn62B2RRUjPxdwsAdj8dCBEvmCafYvFxKV8c9LvcV2d"],"license":"GPL-3.0"}},"version":1},"id":270}