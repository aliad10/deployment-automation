{"abi":[{"type":"constructor","inputs":[{"name":"_integrationManager","type":"address","internalType":"address"},{"name":"_balancerVault","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"CLAIM_REWARDS_SELECTOR","inputs":[],"outputs":[{"name":"","type":"bytes4","internalType":"bytes4"}],"stateMutability":"view"},{"type":"function","name":"LEND_AND_STAKE_SELECTOR","inputs":[],"outputs":[{"name":"","type":"bytes4","internalType":"bytes4"}],"stateMutability":"view"},{"type":"function","name":"LEND_SELECTOR","inputs":[],"outputs":[{"name":"","type":"bytes4","internalType":"bytes4"}],"stateMutability":"view"},{"type":"function","name":"REDEEM_SELECTOR","inputs":[],"outputs":[{"name":"","type":"bytes4","internalType":"bytes4"}],"stateMutability":"view"},{"type":"function","name":"STAKE_SELECTOR","inputs":[],"outputs":[{"name":"","type":"bytes4","internalType":"bytes4"}],"stateMutability":"view"},{"type":"function","name":"TAKE_MULTIPLE_ORDERS_SELECTOR","inputs":[],"outputs":[{"name":"","type":"bytes4","internalType":"bytes4"}],"stateMutability":"view"},{"type":"function","name":"TAKE_ORDER_SELECTOR","inputs":[],"outputs":[{"name":"","type":"bytes4","internalType":"bytes4"}],"stateMutability":"view"},{"type":"function","name":"UNSTAKE_AND_REDEEM_SELECTOR","inputs":[],"outputs":[{"name":"","type":"bytes4","internalType":"bytes4"}],"stateMutability":"view"},{"type":"function","name":"UNSTAKE_SELECTOR","inputs":[],"outputs":[{"name":"","type":"bytes4","internalType":"bytes4"}],"stateMutability":"view"},{"type":"function","name":"claimRewards","inputs":[{"name":"_vaultProxy","type":"address","internalType":"address"},{"name":"_actionData","type":"bytes","internalType":"bytes"},{"name":"","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"getIntegrationManager","inputs":[],"outputs":[{"name":"integrationManager_","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"lendAndStake","inputs":[{"name":"_vaultProxy","type":"address","internalType":"address"},{"name":"_actionData","type":"bytes","internalType":"bytes"},{"name":"","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"parseAssetsForAction","inputs":[{"name":"","type":"address","internalType":"address"},{"name":"_selector","type":"bytes4","internalType":"bytes4"},{"name":"_actionData","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"spendAssetsHandleType_","type":"uint8","internalType":"enum IIntegrationManager.SpendAssetsHandleType"},{"name":"spendAssets_","type":"address[]","internalType":"address[]"},{"name":"spendAssetAmounts_","type":"uint256[]","internalType":"uint256[]"},{"name":"incomingAssets_","type":"address[]","internalType":"address[]"},{"name":"minIncomingAssetAmounts_","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"view"},{"type":"function","name":"stake","inputs":[{"name":"_vaultProxy","type":"address","internalType":"address"},{"name":"_actionData","type":"bytes","internalType":"bytes"},{"name":"","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"takeOrder","inputs":[{"name":"_vaultProxy","type":"address","internalType":"address"},{"name":"_actionData","type":"bytes","internalType":"bytes"},{"name":"","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"unstake","inputs":[{"name":"_vaultProxy","type":"address","internalType":"address"},{"name":"_actionData","type":"bytes","internalType":"bytes"},{"name":"","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"unstakeAndRedeem","inputs":[{"name":"_vaultProxy","type":"address","internalType":"address"},{"name":"_actionData","type":"bytes","internalType":"bytes"},{"name":"","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"CLAIM_REWARDS_SELECTOR()":"40da225d","LEND_AND_STAKE_SELECTOR()":"131461c0","LEND_SELECTOR()":"257cb1a3","REDEEM_SELECTOR()":"f7d882b5","STAKE_SELECTOR()":"3ffc1591","TAKE_MULTIPLE_ORDERS_SELECTOR()":"c32990a2","TAKE_ORDER_SELECTOR()":"863e5ad0","UNSTAKE_AND_REDEEM_SELECTOR()":"080456c1","UNSTAKE_SELECTOR()":"b23228cf","claimRewards(address,bytes,bytes)":"b9dfbacc","getIntegrationManager()":"e7c45690","lendAndStake(address,bytes,bytes)":"29fa046e","parseAssetsForAction(address,bytes4,bytes)":"c54efee5","stake(address,bytes,bytes)":"fa7dd04d","takeOrder(address,bytes,bytes)":"03e38a2b","unstake(address,bytes,bytes)":"68e30677","unstakeAndRedeem(address,bytes,bytes)":"8334eb99"},"rawMetadata":"{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_integrationManager\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_balancerVault\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"CLAIM_REWARDS_SELECTOR\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LEND_AND_STAKE_SELECTOR\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LEND_SELECTOR\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"REDEEM_SELECTOR\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"STAKE_SELECTOR\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TAKE_MULTIPLE_ORDERS_SELECTOR\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TAKE_ORDER_SELECTOR\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"UNSTAKE_AND_REDEEM_SELECTOR\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"UNSTAKE_SELECTOR\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vaultProxy\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_actionData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"claimRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getIntegrationManager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"integrationManager_\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vaultProxy\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_actionData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"lendAndStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"_selector\",\"type\":\"bytes4\"},{\"internalType\":\"bytes\",\"name\":\"_actionData\",\"type\":\"bytes\"}],\"name\":\"parseAssetsForAction\",\"outputs\":[{\"internalType\":\"enum IIntegrationManager.SpendAssetsHandleType\",\"name\":\"spendAssetsHandleType_\",\"type\":\"uint8\"},{\"internalType\":\"address[]\",\"name\":\"spendAssets_\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"spendAssetAmounts_\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"incomingAssets_\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"minIncomingAssetAmounts_\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vaultProxy\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_actionData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vaultProxy\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_actionData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"takeOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vaultProxy\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_actionData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"unstake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vaultProxy\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_actionData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"unstakeAndRedeem\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Enzyme Council <security@enzyme.finance>\",\"details\":\"Rewards tokens are not included as incoming assets for claimRewards()\",\"kind\":\"dev\",\"methods\":{\"claimRewards(address,bytes,bytes)\":{\"details\":\"Needs `onlyIntegrationManager` because Minter claiming permission is given by the fund\",\"params\":{\"_actionData\":\"Data specific to this action\",\"_vaultProxy\":\"The VaultProxy of the calling fund\"}},\"getIntegrationManager()\":{\"returns\":{\"integrationManager_\":\"The `INTEGRATION_MANAGER` variable value\"}},\"lendAndStake(address,bytes,bytes)\":{\"params\":{\"_actionData\":\"Data specific to this action\",\"_vaultProxy\":\"The VaultProxy of the calling fund\"}},\"parseAssetsForAction(address,bytes4,bytes)\":{\"params\":{\"_actionData\":\"The encoded parameters for the callOnIntegration\",\"_selector\":\"The function selector for the callOnIntegration\"},\"returns\":{\"incomingAssets_\":\"The assets to receive in the call\",\"minIncomingAssetAmounts_\":\"The min asset amounts to receive in the call\",\"spendAssetAmounts_\":\"The max asset amounts to spend in the call\",\"spendAssetsHandleType_\":\"A type that dictates how to handle granting the adapter access to spend assets (`None` by default)\",\"spendAssets_\":\"The assets to spend in the call\"}},\"stake(address,bytes,bytes)\":{\"params\":{\"_actionData\":\"Data specific to this action\",\"_vaultProxy\":\"The VaultProxy of the calling fund\"}},\"takeOrder(address,bytes,bytes)\":{\"details\":\"All `_actionData` inputs are Balancer `batchSwap()` params, with the exception of `stakingTokens`. \\\"Spend assets\\\" and \\\"incoming assets\\\" are parsed from the `limits` values corresponding to `assets`: - limit > 0 is a spend asset - limit < 0 is an incoming asset (including a partially-consumed intermediary asset) - limit == 0 is an intermediary asset that is completely consumed in the swap This function can also used for \\\"LPing\\\" with ComposableStablePool instances, since those pools contain their own BPT as an underlying asset. `stakingTokens` facilitates \\\"lend and stake\\\" and \\\"unstake and redeem\\\"-like functionality for such pools. If `stakingTokens[i]` is non-empty, it is considered to be the actual spend/incoming asset that must be unstaked to / staked from the BPT specified in `assets[i]` before/after the batchSawp().\",\"params\":{\"_actionData\":\"Data specific to this action\",\"_vaultProxy\":\"The VaultProxy of the calling fund\"}},\"unstake(address,bytes,bytes)\":{\"params\":{\"_actionData\":\"Data specific to this action\",\"_vaultProxy\":\"The VaultProxy of the calling fund\"}},\"unstakeAndRedeem(address,bytes,bytes)\":{\"params\":{\"_actionData\":\"Data specific to this action\",\"_vaultProxy\":\"The VaultProxy of the calling fund\"}}},\"title\":\"BalancerV2LiquidityAdapterBase Contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"claimRewards(address,bytes,bytes)\":{\"notice\":\"Claims all rewards\"},\"getIntegrationManager()\":{\"notice\":\"Gets the `INTEGRATION_MANAGER` variable\"},\"lendAndStake(address,bytes,bytes)\":{\"notice\":\"Lends assets for LP tokens, then stakes the received LP tokens\"},\"parseAssetsForAction(address,bytes4,bytes)\":{\"notice\":\"Parses the expected assets to receive from a call on integration\"},\"stake(address,bytes,bytes)\":{\"notice\":\"Stakes LP tokens\"},\"takeOrder(address,bytes,bytes)\":{\"notice\":\"Swaps assets on Balancer via batchSwap()\"},\"unstake(address,bytes,bytes)\":{\"notice\":\"Unstakes LP tokens\"},\"unstakeAndRedeem(address,bytes,bytes)\":{\"notice\":\"Unstakes LP tokens, then redeems them\"}},\"notice\":\"Base adapter for liquidity provision in Balancer V2 pools. Implementing contracts can allow staking via Balancer gauges, Aura, etc.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/release/extensions/integration-manager/integrations/utils/0.6.12/bases/BalancerV2LiquidityAdapterBase.sol\":\"BalancerV2LiquidityAdapterBase\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":false},\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-solc-0.6/contracts/\",\":@uniswap/v3-core/=lib/uniswap-v3-core/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-solc-0.6/=lib/openzeppelin-solc-0.6/contracts/\",\":openzeppelin-solc-0.7/=lib/openzeppelin-solc-0.7/contracts/\",\":openzeppelin-solc-0.8/=lib/openzeppelin-solc-0.8/contracts/\",\":uniswap-v3-core-0.8/=lib/uniswap-v3-core-0.8/\",\":uniswap-v3-core/=lib/uniswap-v3-core/\",\":uniswap-v3-periphery-0.8/=lib/uniswap-v3-periphery-0.8/contracts/\",\":uniswap-v3-periphery/=lib/uniswap-v3-periphery/contracts/\"]},\"sources\":{\"contracts/external-interfaces/IBalancerV2Vault.sol\":{\"keccak256\":\"0x3c0137f6e3a1853f6ed42e6e731fe0efef1ca1c9f40c4ae44babd0ebc24accb5\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://a74e6f4eacc15d13a44f0f04e3bb6fea187f3b00a8929fda53fd9c3dbde9ae9d\",\"dweb:/ipfs/QmTGe31Qi9MKa8d1kU6BocTQpbUZVHovUCWY1H5K1MgR2N\"]},\"contracts/release/extensions/integration-manager/IIntegrationAdapter.sol\":{\"keccak256\":\"0xa5e71e11bed87037e98479c8bf1c64b1f52737d6bb8e8a714c8ef229ee1bd0cb\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://182d78da0de8ee37a2ef937a5c46e866e1e39881edf1f6fa5beac2181837b5aa\",\"dweb:/ipfs/QmNa9jpc4mpaHQVi3HMusHZgimpHQ9poLrooo2Nxc3J4eR\"]},\"contracts/release/extensions/integration-manager/IIntegrationManager.sol\":{\"keccak256\":\"0x508e6e7f5e0fa908e8e23cf621495779ef0a4e0edc4203c4e6a1d4832ca0481a\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://5f4d8efc7337e0b01d2e021d4bcd380123dd03027507695a5e740b6c0c195bc4\",\"dweb:/ipfs/QmUbrsZdE7n8mc8EtKyMuVuzt7CC5ZE1BcLjSpZsmAtaCX\"]},\"contracts/release/extensions/integration-manager/integrations/utils/0.6.12/AdapterBase.sol\":{\"keccak256\":\"0x91f432acdba5b77029fdcefb926dd8fbd020da595ef2ed4fdfe32e503308efce\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://b7b50b81d08992d11b21c76eaa64c8b45361e3f31b49537b7731d1f9893a0311\",\"dweb:/ipfs/QmU9vDGLWDwjjHAj9YaHCEhmVAFk3KhW6iSMPi71bHcVoY\"]},\"contracts/release/extensions/integration-manager/integrations/utils/0.6.12/actions/BalancerV2ActionsMixin.sol\":{\"keccak256\":\"0x531992eb2b35d71f36dc7abb623e7b11e743b2788a63b5916a3f885403a46d74\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://3a2546fd41dd5b751a9c452358e5279ebe712f9e29222e3d02832eb3c039e03d\",\"dweb:/ipfs/QmVG2LaiaSUnCtbDvjLCBkYwD8U8Gnxt3SVm6H9NuEB2Cb\"]},\"contracts/release/extensions/integration-manager/integrations/utils/0.6.12/bases/BalancerV2LiquidityAdapterBase.sol\":{\"keccak256\":\"0xae696b0a719968b3d13b3b90859e55098cdb7b0159b2495aad00a6a2401b24e1\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://07e2e5bf70144c33b65039471f0f84c003f95aca92919ba54c9d839f5e813f76\",\"dweb:/ipfs/Qmcw48Xv2Nhoabwchr74TqPLwysnPzYdKWdt6reQvcVcA6\"]},\"contracts/release/extensions/integration-manager/integrations/utils/IntegrationSelectors.sol\":{\"keccak256\":\"0x59a2842db0345e8a304caf19247846118a2408ee1b85663923b7f480484539e7\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://9ed612025c1f8c8437e3bfa141d9368d654c43e6cd7c641cf256c9450cb439a0\",\"dweb:/ipfs/QmUX8tY5fk18X8iWBtKUxziYWGRSYgx5xkNMAFhsRifWVx\"]},\"contracts/utils/0.6.12/AddressArrayLib.sol\":{\"keccak256\":\"0x9596a9a74134166870831e0a1cdd64afa147ddc6704bfe675aa1539833f96760\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://7adf1247f9ebd878261eefe2489f41f06277875295e1aa11a31d5ae2884d0fe3\",\"dweb:/ipfs/QmYbQTQ2svrzcvUn2xoPLdKFhe2y35Zhno5gD7fJApamzU\"]},\"contracts/utils/0.6.12/AssetHelpers.sol\":{\"keccak256\":\"0xe03b55b67ceaecd3929167be5ac4acee7b27bef6ce5dab16cab969a549de815f\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://0c1cc214e49fcf56b178e526ee87004f2dbe67feed755c013639f8d01ceb1acc\",\"dweb:/ipfs/QmZ2NFuP8fZtRmMYUUuco6VvSuFHj1ZtVR2Hs82EKB3oDG\"]},\"lib/openzeppelin-solc-0.6/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://526dc85e1f9b9b45830e202568d267d93dde7a4fcccf4ad7798dadcd92304d3c\",\"dweb:/ipfs/QmaoXMB972J3cSDLtBq3xBo4jLwqD2uzXTwujtSPqkYVhR\"]},\"lib/openzeppelin-solc-0.6/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xca0c2396dbeb3503b51abf4248ebf77a1461edad513c01529df51850a012bee3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://991b44ff44e0496e8554a90f4c0512c28faed45104d40430019f3c67ea67740e\",\"dweb:/ipfs/Qmc3nRapVbcctELoZS5qe17zLkFB3bETBfwzCTMF1CSuGE\"]},\"lib/openzeppelin-solc-0.6/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24427744bd3e6cb73c17010119af12a318289c0253a4d9acb8576c9fb3797b08\",\"dweb:/ipfs/QmTLDqpKRBuxGxRAmjgXt9AkXyACW3MtKzi7PYjm5iMfGC\"]},\"lib/openzeppelin-solc-0.6/contracts/token/ERC20/SafeERC20.sol\":{\"keccak256\":\"0xf12dfbe97e6276980b83d2830bb0eb75e0cf4f3e626c2471137f82158ae6a0fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a849c2d95e85463909e5b5c920b13e7a11216ca14127085e16d22b9379d52a\",\"dweb:/ipfs/QmUg3CZDbCCcQdroEpexBy5ZFd5vD1UWijWQq9qHZjtJNQ\"]},\"lib/openzeppelin-solc-0.6/contracts/utils/Address.sol\":{\"keccak256\":\"0x28911e614500ae7c607a432a709d35da25f3bc5ddc8bd12b278b66358070c0ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://256c8c8af5eb072bc473226ab2b2187149b8fc04f5f4a4820db22527f5ce8e3c\",\"dweb:/ipfs/QmRvi5BhnL7Rxf85KrJhwM6RRhukm4tzoctRdgQEheNyiN\"]},\"lib/openzeppelin-solc-0.6/contracts/utils/Context.sol\":{\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f\",\"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.6.12+commit.27d51765"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"_integrationManager","type":"address"},{"internalType":"address","name":"_balancerVault","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"stateMutability":"view","type":"function","name":"CLAIM_REWARDS_SELECTOR","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"LEND_AND_STAKE_SELECTOR","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"LEND_SELECTOR","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"REDEEM_SELECTOR","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"STAKE_SELECTOR","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"TAKE_MULTIPLE_ORDERS_SELECTOR","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"TAKE_ORDER_SELECTOR","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"UNSTAKE_AND_REDEEM_SELECTOR","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"UNSTAKE_SELECTOR","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}]},{"inputs":[{"internalType":"address","name":"_vaultProxy","type":"address"},{"internalType":"bytes","name":"_actionData","type":"bytes"},{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"claimRewards"},{"inputs":[],"stateMutability":"view","type":"function","name":"getIntegrationManager","outputs":[{"internalType":"address","name":"integrationManager_","type":"address"}]},{"inputs":[{"internalType":"address","name":"_vaultProxy","type":"address"},{"internalType":"bytes","name":"_actionData","type":"bytes"},{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"lendAndStake"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"bytes4","name":"_selector","type":"bytes4"},{"internalType":"bytes","name":"_actionData","type":"bytes"}],"stateMutability":"view","type":"function","name":"parseAssetsForAction","outputs":[{"internalType":"enum IIntegrationManager.SpendAssetsHandleType","name":"spendAssetsHandleType_","type":"uint8"},{"internalType":"address[]","name":"spendAssets_","type":"address[]"},{"internalType":"uint256[]","name":"spendAssetAmounts_","type":"uint256[]"},{"internalType":"address[]","name":"incomingAssets_","type":"address[]"},{"internalType":"uint256[]","name":"minIncomingAssetAmounts_","type":"uint256[]"}]},{"inputs":[{"internalType":"address","name":"_vaultProxy","type":"address"},{"internalType":"bytes","name":"_actionData","type":"bytes"},{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"stake"},{"inputs":[{"internalType":"address","name":"_vaultProxy","type":"address"},{"internalType":"bytes","name":"_actionData","type":"bytes"},{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"takeOrder"},{"inputs":[{"internalType":"address","name":"_vaultProxy","type":"address"},{"internalType":"bytes","name":"_actionData","type":"bytes"},{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"unstake"},{"inputs":[{"internalType":"address","name":"_vaultProxy","type":"address"},{"internalType":"bytes","name":"_actionData","type":"bytes"},{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"unstakeAndRedeem"}],"devdoc":{"kind":"dev","methods":{"claimRewards(address,bytes,bytes)":{"details":"Needs `onlyIntegrationManager` because Minter claiming permission is given by the fund","params":{"_actionData":"Data specific to this action","_vaultProxy":"The VaultProxy of the calling fund"}},"getIntegrationManager()":{"returns":{"integrationManager_":"The `INTEGRATION_MANAGER` variable value"}},"lendAndStake(address,bytes,bytes)":{"params":{"_actionData":"Data specific to this action","_vaultProxy":"The VaultProxy of the calling fund"}},"parseAssetsForAction(address,bytes4,bytes)":{"params":{"_actionData":"The encoded parameters for the callOnIntegration","_selector":"The function selector for the callOnIntegration"},"returns":{"incomingAssets_":"The assets to receive in the call","minIncomingAssetAmounts_":"The min asset amounts to receive in the call","spendAssetAmounts_":"The max asset amounts to spend in the call","spendAssetsHandleType_":"A type that dictates how to handle granting the adapter access to spend assets (`None` by default)","spendAssets_":"The assets to spend in the call"}},"stake(address,bytes,bytes)":{"params":{"_actionData":"Data specific to this action","_vaultProxy":"The VaultProxy of the calling fund"}},"takeOrder(address,bytes,bytes)":{"details":"All `_actionData` inputs are Balancer `batchSwap()` params, with the exception of `stakingTokens`. \"Spend assets\" and \"incoming assets\" are parsed from the `limits` values corresponding to `assets`: - limit > 0 is a spend asset - limit < 0 is an incoming asset (including a partially-consumed intermediary asset) - limit == 0 is an intermediary asset that is completely consumed in the swap This function can also used for \"LPing\" with ComposableStablePool instances, since those pools contain their own BPT as an underlying asset. `stakingTokens` facilitates \"lend and stake\" and \"unstake and redeem\"-like functionality for such pools. If `stakingTokens[i]` is non-empty, it is considered to be the actual spend/incoming asset that must be unstaked to / staked from the BPT specified in `assets[i]` before/after the batchSawp().","params":{"_actionData":"Data specific to this action","_vaultProxy":"The VaultProxy of the calling fund"}},"unstake(address,bytes,bytes)":{"params":{"_actionData":"Data specific to this action","_vaultProxy":"The VaultProxy of the calling fund"}},"unstakeAndRedeem(address,bytes,bytes)":{"params":{"_actionData":"Data specific to this action","_vaultProxy":"The VaultProxy of the calling fund"}}},"version":1},"userdoc":{"kind":"user","methods":{"claimRewards(address,bytes,bytes)":{"notice":"Claims all rewards"},"getIntegrationManager()":{"notice":"Gets the `INTEGRATION_MANAGER` variable"},"lendAndStake(address,bytes,bytes)":{"notice":"Lends assets for LP tokens, then stakes the received LP tokens"},"parseAssetsForAction(address,bytes4,bytes)":{"notice":"Parses the expected assets to receive from a call on integration"},"stake(address,bytes,bytes)":{"notice":"Stakes LP tokens"},"takeOrder(address,bytes,bytes)":{"notice":"Swaps assets on Balancer via batchSwap()"},"unstake(address,bytes,bytes)":{"notice":"Unstakes LP tokens"},"unstakeAndRedeem(address,bytes,bytes)":{"notice":"Unstakes LP tokens, then redeems them"}},"version":1}},"settings":{"remappings":["@openzeppelin/contracts/=lib/openzeppelin-solc-0.6/contracts/","@uniswap/v3-core/=lib/uniswap-v3-core/","ds-test/=lib/forge-std/lib/ds-test/src/","forge-std/=lib/forge-std/src/","openzeppelin-solc-0.6/=lib/openzeppelin-solc-0.6/contracts/","openzeppelin-solc-0.7/=lib/openzeppelin-solc-0.7/contracts/","openzeppelin-solc-0.8/=lib/openzeppelin-solc-0.8/contracts/","uniswap-v3-core-0.8/=lib/uniswap-v3-core-0.8/","uniswap-v3-core/=lib/uniswap-v3-core/","uniswap-v3-periphery-0.8/=lib/uniswap-v3-periphery-0.8/contracts/","uniswap-v3-periphery/=lib/uniswap-v3-periphery/contracts/"],"optimizer":{"runs":200,"details":{"peephole":true,"jumpdestRemover":true,"orderLiterals":true,"deduplicate":true,"cse":true,"constantOptimizer":true,"yul":false}},"metadata":{"bytecodeHash":"none"},"compilationTarget":{"contracts/release/extensions/integration-manager/integrations/utils/0.6.12/bases/BalancerV2LiquidityAdapterBase.sol":"BalancerV2LiquidityAdapterBase"},"evmVersion":"istanbul","libraries":{}},"sources":{"contracts/external-interfaces/IBalancerV2Vault.sol":{"keccak256":"0x3c0137f6e3a1853f6ed42e6e731fe0efef1ca1c9f40c4ae44babd0ebc24accb5","urls":["bzz-raw://a74e6f4eacc15d13a44f0f04e3bb6fea187f3b00a8929fda53fd9c3dbde9ae9d","dweb:/ipfs/QmTGe31Qi9MKa8d1kU6BocTQpbUZVHovUCWY1H5K1MgR2N"],"license":"GPL-3.0"},"contracts/release/extensions/integration-manager/IIntegrationAdapter.sol":{"keccak256":"0xa5e71e11bed87037e98479c8bf1c64b1f52737d6bb8e8a714c8ef229ee1bd0cb","urls":["bzz-raw://182d78da0de8ee37a2ef937a5c46e866e1e39881edf1f6fa5beac2181837b5aa","dweb:/ipfs/QmNa9jpc4mpaHQVi3HMusHZgimpHQ9poLrooo2Nxc3J4eR"],"license":"GPL-3.0"},"contracts/release/extensions/integration-manager/IIntegrationManager.sol":{"keccak256":"0x508e6e7f5e0fa908e8e23cf621495779ef0a4e0edc4203c4e6a1d4832ca0481a","urls":["bzz-raw://5f4d8efc7337e0b01d2e021d4bcd380123dd03027507695a5e740b6c0c195bc4","dweb:/ipfs/QmUbrsZdE7n8mc8EtKyMuVuzt7CC5ZE1BcLjSpZsmAtaCX"],"license":"GPL-3.0"},"contracts/release/extensions/integration-manager/integrations/utils/0.6.12/AdapterBase.sol":{"keccak256":"0x91f432acdba5b77029fdcefb926dd8fbd020da595ef2ed4fdfe32e503308efce","urls":["bzz-raw://b7b50b81d08992d11b21c76eaa64c8b45361e3f31b49537b7731d1f9893a0311","dweb:/ipfs/QmU9vDGLWDwjjHAj9YaHCEhmVAFk3KhW6iSMPi71bHcVoY"],"license":"GPL-3.0"},"contracts/release/extensions/integration-manager/integrations/utils/0.6.12/actions/BalancerV2ActionsMixin.sol":{"keccak256":"0x531992eb2b35d71f36dc7abb623e7b11e743b2788a63b5916a3f885403a46d74","urls":["bzz-raw://3a2546fd41dd5b751a9c452358e5279ebe712f9e29222e3d02832eb3c039e03d","dweb:/ipfs/QmVG2LaiaSUnCtbDvjLCBkYwD8U8Gnxt3SVm6H9NuEB2Cb"],"license":"GPL-3.0"},"contracts/release/extensions/integration-manager/integrations/utils/0.6.12/bases/BalancerV2LiquidityAdapterBase.sol":{"keccak256":"0xae696b0a719968b3d13b3b90859e55098cdb7b0159b2495aad00a6a2401b24e1","urls":["bzz-raw://07e2e5bf70144c33b65039471f0f84c003f95aca92919ba54c9d839f5e813f76","dweb:/ipfs/Qmcw48Xv2Nhoabwchr74TqPLwysnPzYdKWdt6reQvcVcA6"],"license":"GPL-3.0"},"contracts/release/extensions/integration-manager/integrations/utils/IntegrationSelectors.sol":{"keccak256":"0x59a2842db0345e8a304caf19247846118a2408ee1b85663923b7f480484539e7","urls":["bzz-raw://9ed612025c1f8c8437e3bfa141d9368d654c43e6cd7c641cf256c9450cb439a0","dweb:/ipfs/QmUX8tY5fk18X8iWBtKUxziYWGRSYgx5xkNMAFhsRifWVx"],"license":"GPL-3.0"},"contracts/utils/0.6.12/AddressArrayLib.sol":{"keccak256":"0x9596a9a74134166870831e0a1cdd64afa147ddc6704bfe675aa1539833f96760","urls":["bzz-raw://7adf1247f9ebd878261eefe2489f41f06277875295e1aa11a31d5ae2884d0fe3","dweb:/ipfs/QmYbQTQ2svrzcvUn2xoPLdKFhe2y35Zhno5gD7fJApamzU"],"license":"GPL-3.0"},"contracts/utils/0.6.12/AssetHelpers.sol":{"keccak256":"0xe03b55b67ceaecd3929167be5ac4acee7b27bef6ce5dab16cab969a549de815f","urls":["bzz-raw://0c1cc214e49fcf56b178e526ee87004f2dbe67feed755c013639f8d01ceb1acc","dweb:/ipfs/QmZ2NFuP8fZtRmMYUUuco6VvSuFHj1ZtVR2Hs82EKB3oDG"],"license":"GPL-3.0"},"lib/openzeppelin-solc-0.6/contracts/math/SafeMath.sol":{"keccak256":"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52","urls":["bzz-raw://526dc85e1f9b9b45830e202568d267d93dde7a4fcccf4ad7798dadcd92304d3c","dweb:/ipfs/QmaoXMB972J3cSDLtBq3xBo4jLwqD2uzXTwujtSPqkYVhR"],"license":"MIT"},"lib/openzeppelin-solc-0.6/contracts/token/ERC20/ERC20.sol":{"keccak256":"0xca0c2396dbeb3503b51abf4248ebf77a1461edad513c01529df51850a012bee3","urls":["bzz-raw://991b44ff44e0496e8554a90f4c0512c28faed45104d40430019f3c67ea67740e","dweb:/ipfs/Qmc3nRapVbcctELoZS5qe17zLkFB3bETBfwzCTMF1CSuGE"],"license":"MIT"},"lib/openzeppelin-solc-0.6/contracts/token/ERC20/IERC20.sol":{"keccak256":"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5","urls":["bzz-raw://24427744bd3e6cb73c17010119af12a318289c0253a4d9acb8576c9fb3797b08","dweb:/ipfs/QmTLDqpKRBuxGxRAmjgXt9AkXyACW3MtKzi7PYjm5iMfGC"],"license":"MIT"},"lib/openzeppelin-solc-0.6/contracts/token/ERC20/SafeERC20.sol":{"keccak256":"0xf12dfbe97e6276980b83d2830bb0eb75e0cf4f3e626c2471137f82158ae6a0fc","urls":["bzz-raw://b3a849c2d95e85463909e5b5c920b13e7a11216ca14127085e16d22b9379d52a","dweb:/ipfs/QmUg3CZDbCCcQdroEpexBy5ZFd5vD1UWijWQq9qHZjtJNQ"],"license":"MIT"},"lib/openzeppelin-solc-0.6/contracts/utils/Address.sol":{"keccak256":"0x28911e614500ae7c607a432a709d35da25f3bc5ddc8bd12b278b66358070c0ea","urls":["bzz-raw://256c8c8af5eb072bc473226ab2b2187149b8fc04f5f4a4820db22527f5ce8e3c","dweb:/ipfs/QmRvi5BhnL7Rxf85KrJhwM6RRhukm4tzoctRdgQEheNyiN"],"license":"MIT"},"lib/openzeppelin-solc-0.6/contracts/utils/Context.sol":{"keccak256":"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0","urls":["bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f","dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96"],"license":"MIT"}},"version":1},"id":244}