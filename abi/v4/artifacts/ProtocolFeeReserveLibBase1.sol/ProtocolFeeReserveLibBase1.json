{"abi":[{"type":"function","name":"getDispatcher","inputs":[],"outputs":[{"name":"dispatcher_","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"getProtocolFeeReserveLib","inputs":[],"outputs":[{"name":"protocolFeeReserveLib_","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"init","inputs":[{"name":"_dispatcher","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"proxiableUUID","inputs":[],"outputs":[{"name":"uuid_","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"setProtocolFeeReserveLib","inputs":[{"name":"_nextProtocolFeeReserveLib","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"event","name":"MlnTokenBalanceWithdrawn","inputs":[{"name":"to","type":"address","indexed":true,"internalType":"address"},{"name":"amount","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"ProtocolFeeReserveLibSet","inputs":[{"name":"nextProtocolFeeReserveLib","type":"address","indexed":false,"internalType":"address"}],"anonymous":false},{"type":"event","name":"SharesBoughtBack","inputs":[{"name":"vaultProxy","type":"address","indexed":true,"internalType":"address"},{"name":"sharesAmount","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"mlnValue","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"mlnBurned","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"getDispatcher()":"ebb3d589","getProtocolFeeReserveLib()":"b3e2546b","init(address)":"19ab453c","proxiableUUID()":"52d1902d","setProtocolFeeReserveLib(address)":"c75a882a"},"rawMetadata":"{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"MlnTokenBalanceWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"nextProtocolFeeReserveLib\",\"type\":\"address\"}],\"name\":\"ProtocolFeeReserveLibSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"vaultProxy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"sharesAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"mlnValue\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"mlnBurned\",\"type\":\"uint256\"}],\"name\":\"SharesBoughtBack\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"getDispatcher\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"dispatcher_\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getProtocolFeeReserveLib\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"protocolFeeReserveLib_\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_dispatcher\",\"type\":\"address\"}],\"name\":\"init\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"uuid_\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nextProtocolFeeReserveLib\",\"type\":\"address\"}],\"name\":\"setProtocolFeeReserveLib\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Enzyme Council <security@enzyme.finance>\",\"details\":\"Each next base implementation inherits the previous base implementation, e.g., `ProtocolFeeReserveLibBase2 is ProtocolFeeReserveLibBase1` DO NOT EDIT CONTRACT.\",\"kind\":\"dev\",\"methods\":{\"getDispatcher()\":{\"returns\":{\"dispatcher_\":\"The `dispatcher` variable value\"}},\"getProtocolFeeReserveLib()\":{\"returns\":{\"protocolFeeReserveLib_\":\"The address of the ProtocolFeeReserveLib target\"}},\"init(address)\":{\"details\":\"Serves as a pseudo-constructor\",\"params\":{\"_dispatcher\":\"The Dispatcher contract\"}},\"proxiableUUID()\":{\"returns\":{\"uuid_\":\"The bytes32 hash representing the UUID\"}},\"setProtocolFeeReserveLib(address)\":{\"details\":\"This function is absolutely critical. __updateCodeAddress() validates that the target is a valid Proxiable contract instance. Does not block _nextProtocolFeeReserveLib from being the same as the current ProtocolFeeReserveLib\",\"params\":{\"_nextProtocolFeeReserveLib\":\"The address to set as the ProtocolFeeReserveLib\"}}},\"title\":\"ProtocolFeeReserveLibBase1 Contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getDispatcher()\":{\"notice\":\"Gets the `dispatcher` variable\"},\"getProtocolFeeReserveLib()\":{\"notice\":\"Gets the ProtocolFeeReserveLib target for the ProtocolFeeReserveProxy\"},\"init(address)\":{\"notice\":\"Initializes the ProtocolFeeReserveProxy with core configuration\"},\"proxiableUUID()\":{\"notice\":\"Returns a unique bytes32 hash for ProtocolFeeReserveLib instances\"},\"setProtocolFeeReserveLib(address)\":{\"notice\":\"Sets the ProtocolFeeReserveLib target for the ProtocolFeeReserveProxy\"}},\"notice\":\"A base implementation for ProtocolFeeReserveLib\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/persistent/protocol-fee-reserve/bases/ProtocolFeeReserveLibBase1.sol\":\"ProtocolFeeReserveLibBase1\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-solc-0.6/contracts/\",\":@uniswap/v3-core/=lib/uniswap-v3-core/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-solc-0.6/=lib/openzeppelin-solc-0.6/contracts/\",\":openzeppelin-solc-0.7/=lib/openzeppelin-solc-0.7/contracts/\",\":openzeppelin-solc-0.8/=lib/openzeppelin-solc-0.8/contracts/\",\":uniswap-v3-core-0.8/=lib/uniswap-v3-core-0.8/\",\":uniswap-v3-core/=lib/uniswap-v3-core/\",\":uniswap-v3-periphery-0.8/=lib/uniswap-v3-periphery-0.8/contracts/\",\":uniswap-v3-periphery/=lib/uniswap-v3-periphery/contracts/\"]},\"sources\":{\"contracts/persistent/dispatcher/IDispatcher.sol\":{\"keccak256\":\"0x2a4df902058211d49327eb16fc81e49dd4085bd8528101bbaac412805977e04a\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://b54c8c4162c819e35fe972142ba55510ce42a9e7c2ec723eb674c227be8bef15\",\"dweb:/ipfs/QmVhJZjeuYtHzjd5WXUHNKk4ZHaZAZukRoZBhVvPYYmDFT\"]},\"contracts/persistent/protocol-fee-reserve/bases/ProtocolFeeReserveLibBase1.sol\":{\"keccak256\":\"0xeb8718811f4adefbc8c1bfa72ac4510e596036216d320273bec7cae2170b5c8d\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://22827f802764f37cc91f074345abbdf20b45f9b182347717d07062f19ebc0d14\",\"dweb:/ipfs/QmUVhZCgCHXMpAHgF71DsBHu4eurvaxx7UCh2SFR5cF5Kx\"]},\"contracts/persistent/protocol-fee-reserve/bases/ProtocolFeeReserveLibBaseCore.sol\":{\"keccak256\":\"0x93110771ed1fa44991abaa89e5c7b5d4c593313581356a8bf9e7a1402fdd8bc6\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://d1475aee17886fb0bd75b18998485fb808aa6c5455983426e997c3ea87bdd6ac\",\"dweb:/ipfs/QmdnN3gKGwh7mrp5Ce8NWj4EPZ3Ryi12yihD5gauwRo8Wv\"]},\"contracts/persistent/protocol-fee-reserve/utils/ProtocolFeeProxyConstants.sol\":{\"keccak256\":\"0xccd41bf391d0d2f84f8dc7ebb3ac94c071fd37dc3788e0d34769bb424f59ff52\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://bf4c3d7a3fa6c2f8ac68bb35556215e74be76d4bea0c0dbc428b7d0fd59562c0\",\"dweb:/ipfs/QmaCtDGWcQLSWWGWFDLZW5huFgtGHB4Dfsg7nEgiKrE9k2\"]},\"contracts/persistent/protocol-fee-reserve/utils/ProxiableProtocolFeeReserveLib.sol\":{\"keccak256\":\"0x0da0ad4a1c668e9fca36016beed82da2c3ff04845ff209d51e17d78cdc30de71\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://56863cd6401eb75c1273d29220f1ff0c0838ff099530f2bee8008473fcaf4765\",\"dweb:/ipfs/QmYSXGbDU3K6mm8sgXfkdj4EYrW2gsK9BU8bDtJVV2n1At\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.6.12+commit.27d51765"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"to","type":"address","indexed":true},{"internalType":"uint256","name":"amount","type":"uint256","indexed":false}],"type":"event","name":"MlnTokenBalanceWithdrawn","anonymous":false},{"inputs":[{"internalType":"address","name":"nextProtocolFeeReserveLib","type":"address","indexed":false}],"type":"event","name":"ProtocolFeeReserveLibSet","anonymous":false},{"inputs":[{"internalType":"address","name":"vaultProxy","type":"address","indexed":true},{"internalType":"uint256","name":"sharesAmount","type":"uint256","indexed":false},{"internalType":"uint256","name":"mlnValue","type":"uint256","indexed":false},{"internalType":"uint256","name":"mlnBurned","type":"uint256","indexed":false}],"type":"event","name":"SharesBoughtBack","anonymous":false},{"inputs":[],"stateMutability":"view","type":"function","name":"getDispatcher","outputs":[{"internalType":"address","name":"dispatcher_","type":"address"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getProtocolFeeReserveLib","outputs":[{"internalType":"address","name":"protocolFeeReserveLib_","type":"address"}]},{"inputs":[{"internalType":"address","name":"_dispatcher","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"init"},{"inputs":[],"stateMutability":"pure","type":"function","name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"uuid_","type":"bytes32"}]},{"inputs":[{"internalType":"address","name":"_nextProtocolFeeReserveLib","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"setProtocolFeeReserveLib"}],"devdoc":{"kind":"dev","methods":{"getDispatcher()":{"returns":{"dispatcher_":"The `dispatcher` variable value"}},"getProtocolFeeReserveLib()":{"returns":{"protocolFeeReserveLib_":"The address of the ProtocolFeeReserveLib target"}},"init(address)":{"details":"Serves as a pseudo-constructor","params":{"_dispatcher":"The Dispatcher contract"}},"proxiableUUID()":{"returns":{"uuid_":"The bytes32 hash representing the UUID"}},"setProtocolFeeReserveLib(address)":{"details":"This function is absolutely critical. __updateCodeAddress() validates that the target is a valid Proxiable contract instance. Does not block _nextProtocolFeeReserveLib from being the same as the current ProtocolFeeReserveLib","params":{"_nextProtocolFeeReserveLib":"The address to set as the ProtocolFeeReserveLib"}}},"version":1},"userdoc":{"kind":"user","methods":{"getDispatcher()":{"notice":"Gets the `dispatcher` variable"},"getProtocolFeeReserveLib()":{"notice":"Gets the ProtocolFeeReserveLib target for the ProtocolFeeReserveProxy"},"init(address)":{"notice":"Initializes the ProtocolFeeReserveProxy with core configuration"},"proxiableUUID()":{"notice":"Returns a unique bytes32 hash for ProtocolFeeReserveLib instances"},"setProtocolFeeReserveLib(address)":{"notice":"Sets the ProtocolFeeReserveLib target for the ProtocolFeeReserveProxy"}},"version":1}},"settings":{"remappings":["@openzeppelin/contracts/=lib/openzeppelin-solc-0.6/contracts/","@uniswap/v3-core/=lib/uniswap-v3-core/","ds-test/=lib/forge-std/lib/ds-test/src/","forge-std/=lib/forge-std/src/","openzeppelin-solc-0.6/=lib/openzeppelin-solc-0.6/contracts/","openzeppelin-solc-0.7/=lib/openzeppelin-solc-0.7/contracts/","openzeppelin-solc-0.8/=lib/openzeppelin-solc-0.8/contracts/","uniswap-v3-core-0.8/=lib/uniswap-v3-core-0.8/","uniswap-v3-core/=lib/uniswap-v3-core/","uniswap-v3-periphery-0.8/=lib/uniswap-v3-periphery-0.8/contracts/","uniswap-v3-periphery/=lib/uniswap-v3-periphery/contracts/"],"optimizer":{"enabled":false,"runs":200},"metadata":{"bytecodeHash":"none"},"compilationTarget":{"contracts/persistent/protocol-fee-reserve/bases/ProtocolFeeReserveLibBase1.sol":"ProtocolFeeReserveLibBase1"},"evmVersion":"istanbul","libraries":{}},"sources":{"contracts/persistent/dispatcher/IDispatcher.sol":{"keccak256":"0x2a4df902058211d49327eb16fc81e49dd4085bd8528101bbaac412805977e04a","urls":["bzz-raw://b54c8c4162c819e35fe972142ba55510ce42a9e7c2ec723eb674c227be8bef15","dweb:/ipfs/QmVhJZjeuYtHzjd5WXUHNKk4ZHaZAZukRoZBhVvPYYmDFT"],"license":"GPL-3.0"},"contracts/persistent/protocol-fee-reserve/bases/ProtocolFeeReserveLibBase1.sol":{"keccak256":"0xeb8718811f4adefbc8c1bfa72ac4510e596036216d320273bec7cae2170b5c8d","urls":["bzz-raw://22827f802764f37cc91f074345abbdf20b45f9b182347717d07062f19ebc0d14","dweb:/ipfs/QmUVhZCgCHXMpAHgF71DsBHu4eurvaxx7UCh2SFR5cF5Kx"],"license":"GPL-3.0"},"contracts/persistent/protocol-fee-reserve/bases/ProtocolFeeReserveLibBaseCore.sol":{"keccak256":"0x93110771ed1fa44991abaa89e5c7b5d4c593313581356a8bf9e7a1402fdd8bc6","urls":["bzz-raw://d1475aee17886fb0bd75b18998485fb808aa6c5455983426e997c3ea87bdd6ac","dweb:/ipfs/QmdnN3gKGwh7mrp5Ce8NWj4EPZ3Ryi12yihD5gauwRo8Wv"],"license":"GPL-3.0"},"contracts/persistent/protocol-fee-reserve/utils/ProtocolFeeProxyConstants.sol":{"keccak256":"0xccd41bf391d0d2f84f8dc7ebb3ac94c071fd37dc3788e0d34769bb424f59ff52","urls":["bzz-raw://bf4c3d7a3fa6c2f8ac68bb35556215e74be76d4bea0c0dbc428b7d0fd59562c0","dweb:/ipfs/QmaCtDGWcQLSWWGWFDLZW5huFgtGHB4Dfsg7nEgiKrE9k2"],"license":"GPL-3.0"},"contracts/persistent/protocol-fee-reserve/utils/ProxiableProtocolFeeReserveLib.sol":{"keccak256":"0x0da0ad4a1c668e9fca36016beed82da2c3ff04845ff209d51e17d78cdc30de71","urls":["bzz-raw://56863cd6401eb75c1273d29220f1ff0c0838ff099530f2bee8008473fcaf4765","dweb:/ipfs/QmYSXGbDU3K6mm8sgXfkdj4EYrW2gsK9BU8bDtJVV2n1At"],"license":"GPL-3.0"}},"version":1},"id":103}